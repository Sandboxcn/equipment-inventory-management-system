{"version":3,"file":"Analysis-Dr711uTA.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/ArrowDownIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowPathIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowTrendingDownIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowTrendingUpIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowUpIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowsPointingInIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowsPointingOutIcon.js","../../node_modules/@heroicons/react/24/outline/esm/Cog6ToothIcon.js","../../node_modules/@heroicons/react/24/outline/esm/CpuChipIcon.js","../../node_modules/@heroicons/react/24/outline/esm/EyeIcon.js","../../node_modules/@heroicons/react/24/outline/esm/FunnelIcon.js","../../node_modules/@heroicons/react/24/outline/esm/LightBulbIcon.js","../../node_modules/@heroicons/react/24/outline/esm/LinkIcon.js","../../node_modules/@heroicons/react/24/outline/esm/MagnifyingGlassIcon.js","../../node_modules/@heroicons/react/24/outline/esm/PresentationChartBarIcon.js","../../node_modules/@heroicons/react/24/outline/esm/TableCellsIcon.js","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.dataset.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/react-chartjs-2/dist/index.js","../../src/utils/colorSchemes.ts","../../src/components/charts/KPICard.tsx","../../src/components/charts/GaugeChart.tsx","../../src/components/charts/RadarChart.tsx","../../src/components/charts/HeatmapChart.tsx","../../src/components/charts/TrendChart.tsx","../../src/components/charts/DonutChart.tsx","../../src/components/charts/InteractiveExplorer.tsx","../../src/components/charts/ChartLinkage.tsx","../../src/components/charts/TrendAnalysis.tsx","../../src/pages/Analysis.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction ArrowDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19.5 13.5 12 21m0 0-7.5-7.5M12 21V3\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowPathIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowPathIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowTrendingDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 6 9 12.75l4.286-4.286a11.948 11.948 0 0 1 4.306 6.43l.776 2.898m0 0 3.182-5.511m-3.182 5.51-5.511-3.181\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowTrendingDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowTrendingUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 18 9 11.25l4.306 4.306a11.95 11.95 0 0 1 5.814-5.518l2.74-1.22m0 0-5.94-2.281m5.94 2.28-2.28 5.941\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowTrendingUpIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M4.5 10.5 12 3m0 0 7.5 7.5M12 3v18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowUpIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowsPointingInIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 9V4.5M9 9H4.5M9 9 3.75 3.75M9 15v4.5M9 15H4.5M9 15l-5.25 5.25M15 9h4.5M15 9V4.5M15 9l5.25-5.25M15 15h4.5M15 15v4.5m0-4.5 5.25 5.25\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowsPointingInIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowsPointingOutIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9m5.25 11.25h-4.5m4.5 0v-4.5m0 4.5L15 15\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowsPointingOutIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction Cog6ToothIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.325.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 0 1 1.37.49l1.296 2.247a1.125 1.125 0 0 1-.26 1.431l-1.003.827c-.293.241-.438.613-.43.992a7.723 7.723 0 0 1 0 .255c-.008.378.137.75.43.991l1.004.827c.424.35.534.955.26 1.43l-1.298 2.247a1.125 1.125 0 0 1-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.47 6.47 0 0 1-.22.128c-.331.183-.581.495-.644.869l-.213 1.281c-.09.543-.56.94-1.11.94h-2.594c-.55 0-1.019-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 0 1-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 0 1-1.369-.49l-1.297-2.247a1.125 1.125 0 0 1 .26-1.431l1.004-.827c.292-.24.437-.613.43-.991a6.932 6.932 0 0 1 0-.255c.007-.38-.138-.751-.43-.992l-1.004-.827a1.125 1.125 0 0 1-.26-1.43l1.297-2.247a1.125 1.125 0 0 1 1.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.086.22-.128.332-.183.582-.495.644-.869l.214-1.28Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(Cog6ToothIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CpuChipIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.25 3v1.5M4.5 8.25H3m18 0h-1.5M4.5 12H3m18 0h-1.5m-15 3.75H3m18 0h-1.5M8.25 19.5V21M12 3v1.5m0 15V21m3.75-18v1.5m0 15V21m-9-1.5h10.5a2.25 2.25 0 0 0 2.25-2.25V6.75a2.25 2.25 0 0 0-2.25-2.25H6.75A2.25 2.25 0 0 0 4.5 6.75v10.5a2.25 2.25 0 0 0 2.25 2.25Zm.75-12h9v9h-9v-9Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CpuChipIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction EyeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(EyeIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction FunnelIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 0 1-.659 1.591l-5.432 5.432a2.25 2.25 0 0 0-.659 1.591v2.927a2.25 2.25 0 0 1-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 0 0-.659-1.591L3.659 7.409A2.25 2.25 0 0 1 3 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0 1 12 3Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(FunnelIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction LightBulbIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 18v-5.25m0 0a6.01 6.01 0 0 0 1.5-.189m-1.5.189a6.01 6.01 0 0 1-1.5-.189m3.75 7.478a12.06 12.06 0 0 1-4.5 0m3.75 2.383a14.406 14.406 0 0 1-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 1 0-7.517 0c.85.493 1.509 1.333 1.509 2.316V18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(LightBulbIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction LinkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M13.19 8.688a4.5 4.5 0 0 1 1.242 7.244l-4.5 4.5a4.5 4.5 0 0 1-6.364-6.364l1.757-1.757m13.35-.622 1.757-1.757a4.5 4.5 0 0 0-6.364-6.364l-4.5 4.5a4.5 4.5 0 0 0 1.242 7.244\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(LinkIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction MagnifyingGlassIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(MagnifyingGlassIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PresentationChartBarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 3v11.25A2.25 2.25 0 0 0 6 16.5h2.25M3.75 3h-1.5m1.5 0h16.5m0 0h1.5m-1.5 0v11.25A2.25 2.25 0 0 1 18 16.5h-2.25m-7.5 0h7.5m-7.5 0-1 3m8.5-3 1 3m0 0 .5 1.5m-.5-1.5h-9.5m0 0-.5 1.5M9 11.25v1.5M12 9v3.75m3-6v6\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PresentationChartBarIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction TableCellsIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 0 1-1.125-1.125M3.375 19.5h7.5c.621 0 1.125-.504 1.125-1.125m-9.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-7.5A1.125 1.125 0 0 1 12 18.375m9.75-12.75c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125m19.5 0v1.5c0 .621-.504 1.125-1.125 1.125M2.25 5.625v1.5c0 .621.504 1.125 1.125 1.125m0 0h17.25m-17.25 0h7.5c.621 0 1.125.504 1.125 1.125M3.375 8.25c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m17.25-3.75h-7.5c-.621 0-1.125.504-1.125 1.125m8.625-1.125c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h7.5m-7.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M12 10.875v-1.5m0 1.5c0 .621-.504 1.125-1.125 1.125M12 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125M13.125 12h7.5m-7.5 0c-.621 0-1.125.504-1.125 1.125M20.625 12c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h7.5M12 14.625v-1.5m0 1.5c0 .621-.504 1.125-1.125 1.125M12 14.625c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m0 1.5v-1.5m0 0c0-.621.504-1.125 1.125-1.125m0 0h7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TableCellsIcon);\nexport default ForwardRef;","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX, root }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        const parent = root ?? document.head;\n        parent.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (parent.contains(style)) {\n                parent.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, root }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, root: root, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", root }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, root: root, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","// 专业数据可视化配色方案\n\n// 主要配色方案 - 基于现代设计趋势\nexport const primaryColors = {\n  purple: {\n    50: '#F3F4F6',\n    100: '#E5E7EB',\n    200: '#D1D5DB',\n    300: '#9CA3AF',\n    400: '#6B7280',\n    500: '#8B5CF6',\n    600: '#7C3AED',\n    700: '#6D28D9',\n    800: '#5B21B6',\n    900: '#4C1D95'\n  },\n  blue: {\n    50: '#EFF6FF',\n    100: '#DBEAFE',\n    200: '#BFDBFE',\n    300: '#93C5FD',\n    400: '#60A5FA',\n    500: '#3B82F6',\n    600: '#2563EB',\n    700: '#1D4ED8',\n    800: '#1E40AF',\n    900: '#1E3A8A'\n  },\n  green: {\n    50: '#ECFDF5',\n    100: '#D1FAE5',\n    200: '#A7F3D0',\n    300: '#6EE7B7',\n    400: '#34D399',\n    500: '#10B981',\n    600: '#059669',\n    700: '#047857',\n    800: '#065F46',\n    900: '#064E3B'\n  },\n  yellow: {\n    50: '#FFFBEB',\n    100: '#FEF3C7',\n    200: '#FDE68A',\n    300: '#FCD34D',\n    400: '#FBBF24',\n    500: '#F59E0B',\n    600: '#D97706',\n    700: '#B45309',\n    800: '#92400E',\n    900: '#78350F'\n  },\n  red: {\n    50: '#FEF2F2',\n    100: '#FEE2E2',\n    200: '#FECACA',\n    300: '#FCA5A5',\n    400: '#F87171',\n    500: '#EF4444',\n    600: '#DC2626',\n    700: '#B91C1C',\n    800: '#991B1B',\n    900: '#7F1D1D'\n  }\n};\n\n// 图表专用配色方案\nexport const chartColorSchemes = {\n  // 现代渐变配色\n  modern: [\n    '#8B5CF6', // 紫色\n    '#3B82F6', // 蓝色\n    '#10B981', // 绿色\n    '#F59E0B', // 黄色\n    '#EF4444', // 红色\n    '#EC4899', // 粉色\n    '#06B6D4', // 青色\n    '#84CC16'  // 青绿色\n  ],\n  \n  // 商务专业配色\n  business: [\n    '#1E40AF', // 深蓝\n    '#059669', // 深绿\n    '#DC2626', // 深红\n    '#D97706', // 深橙\n    '#7C2D12', // 深棕\n    '#4C1D95', // 深紫\n    '#0F766E', // 深青\n    '#365314'  // 深绿黄\n  ],\n  \n  // 科技感配色\n  tech: [\n    '#00D9FF', // 电光蓝\n    '#FF6B6B', // 珊瑚红\n    '#4ECDC4', // 薄荷绿\n    '#45B7D1', // 天空蓝\n    '#96CEB4', // 薄荷绿\n    '#FFEAA7', // 香草黄\n    '#DDA0DD', // 梅花紫\n    '#98D8C8'  // 水绿色\n  ],\n  \n  // 温暖配色\n  warm: [\n    '#FF6B6B', // 暖红\n    '#FFE66D', // 暖黄\n    '#FF8E53', // 暖橙\n    '#FF6B9D', // 暖粉\n    '#C44569', // 暖紫红\n    '#F8B500', // 金黄\n    '#FF7675', // 浅红\n    '#FDCB6E'  // 浅橙\n  ],\n  \n  // 冷色调配色\n  cool: [\n    '#74B9FF', // 冷蓝\n    '#0984E3', // 深蓝\n    '#00CEC9', // 青绿\n    '#6C5CE7', // 紫色\n    '#A29BFE', // 浅紫\n    '#81ECEC', // 浅青\n    '#55A3FF', // 中蓝\n    '#5F27CD'  // 深紫\n  ]\n};\n\n// 状态指示配色\nexport const statusColors = {\n  success: {\n    bg: 'bg-green-500/20',\n    text: 'text-green-400',\n    border: 'border-green-500/30',\n    solid: '#10B981'\n  },\n  warning: {\n    bg: 'bg-yellow-500/20',\n    text: 'text-yellow-400',\n    border: 'border-yellow-500/30',\n    solid: '#F59E0B'\n  },\n  error: {\n    bg: 'bg-red-500/20',\n    text: 'text-red-400',\n    border: 'border-red-500/30',\n    solid: '#EF4444'\n  },\n  info: {\n    bg: 'bg-blue-500/20',\n    text: 'text-blue-400',\n    border: 'border-blue-500/30',\n    solid: '#3B82F6'\n  },\n  neutral: {\n    bg: 'bg-gray-500/20',\n    text: 'text-gray-400',\n    border: 'border-gray-500/30',\n    solid: '#6B7280'\n  }\n};\n\n// 渐变配色\nexport const gradientSchemes = {\n  // 紫蓝渐变\n  purpleBlue: {\n    from: 'from-purple-600',\n    via: 'via-purple-500',\n    to: 'to-blue-500',\n    css: 'linear-gradient(135deg, #8B5CF6 0%, #3B82F6 100%)'\n  },\n  \n  // 蓝绿渐变\n  blueGreen: {\n    from: 'from-blue-500',\n    via: 'via-teal-500',\n    to: 'to-green-500',\n    css: 'linear-gradient(135deg, #3B82F6 0%, #10B981 100%)'\n  },\n  \n  // 橙红渐变\n  orangeRed: {\n    from: 'from-orange-500',\n    via: 'via-red-500',\n    to: 'to-pink-500',\n    css: 'linear-gradient(135deg, #F59E0B 0%, #EF4444 100%)'\n  },\n  \n  // 深色渐变\n  dark: {\n    from: 'from-gray-900',\n    via: 'via-gray-800',\n    to: 'to-gray-700',\n    css: 'linear-gradient(135deg, #111827 0%, #374151 100%)'\n  }\n};\n\n// 热力图配色\nexport const heatmapColors = {\n  // 蓝色系\n  blue: ['#F0F9FF', '#E0F2FE', '#BAE6FD', '#7DD3FC', '#38BDF8', '#0EA5E9', '#0284C7', '#0369A1'],\n  \n  // 绿色系\n  green: ['#F0FDF4', '#DCFCE7', '#BBF7D0', '#86EFAC', '#4ADE80', '#22C55E', '#16A34A', '#15803D'],\n  \n  // 红色系\n  red: ['#FEF2F2', '#FEE2E2', '#FECACA', '#FCA5A5', '#F87171', '#EF4444', '#DC2626', '#B91C1C'],\n  \n  // 紫色系\n  purple: ['#FAF5FF', '#F3E8FF', '#E9D5FF', '#D8B4FE', '#C084FC', '#A855F7', '#9333EA', '#7C3AED'],\n  \n  // 彩虹色系\n  rainbow: ['#1F2937', '#374151', '#4B5563', '#6B7280', '#9CA3AF', '#D1D5DB', '#F3F4F6', '#FFFFFF']\n};\n\n// 获取图表配色的工具函数\nexport const getChartColors = (scheme: keyof typeof chartColorSchemes = 'modern', count?: number) => {\n  const colors = chartColorSchemes[scheme];\n  if (count && count <= colors.length) {\n    return colors.slice(0, count);\n  }\n  return colors;\n};\n\n// 获取渐变CSS的工具函数\nexport const getGradientCSS = (scheme: keyof typeof gradientSchemes) => {\n  return gradientSchemes[scheme].css;\n};\n\n// 获取状态颜色的工具函数\nexport const getStatusColor = (status: 'success' | 'warning' | 'error' | 'info' | 'neutral') => {\n  return statusColors[status];\n};\n\n// 生成随机配色的工具函数\nexport const generateRandomColors = (count: number, scheme: keyof typeof chartColorSchemes = 'modern') => {\n  const colors = chartColorSchemes[scheme];\n  const result = [];\n  \n  for (let i = 0; i < count; i++) {\n    result.push(colors[i % colors.length]);\n  }\n  \n  return result;\n};\n\n// 根据数值生成热力图颜色\nexport const getHeatmapColor = (value: number, min: number, max: number, scheme: keyof typeof heatmapColors = 'blue') => {\n  const colors = heatmapColors[scheme];\n  const normalizedValue = (value - min) / (max - min);\n  const colorIndex = Math.floor(normalizedValue * (colors.length - 1));\n  return colors[Math.max(0, Math.min(colorIndex, colors.length - 1))];\n};\n\nexport default {\n  primaryColors,\n  chartColorSchemes,\n  statusColors,\n  gradientSchemes,\n  heatmapColors,\n  getChartColors,\n  getGradientCSS,\n  getStatusColor,\n  generateRandomColors,\n  getHeatmapColor\n};","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { ArrowTrendingUpIcon, ArrowTrendingDownIcon, ArrowUpIcon, ArrowDownIcon } from '@heroicons/react/24/outline';\nimport { getChartColors, getStatusColor, getGradientCSS } from '../../utils/colorSchemes';\n\ninterface KPICardProps {\n  title: string;\n  value: string | number;\n  unit?: string;\n  change?: number;\n  changeType?: 'percentage' | 'absolute';\n  trend?: 'up' | 'down' | 'neutral';\n  icon?: React.ReactNode;\n  color?: 'blue' | 'green' | 'red' | 'yellow' | 'purple' | 'indigo';\n  size?: 'sm' | 'md' | 'lg';\n  showSparkline?: boolean;\n  sparklineData?: number[];\n  target?: number;\n  description?: string;\n  colorScheme?: 'modern' | 'business' | 'tech' | 'warm' | 'cool';\n}\n\nconst KPICard: React.FC<KPICardProps> = ({\n  title,\n  value,\n  unit = '',\n  change,\n  changeType = 'percentage',\n  trend = 'neutral',\n  icon,\n  color = 'blue',\n  size = 'md',\n  showSparkline = false,\n  sparklineData = [],\n  target,\n  description,\n  colorScheme = 'modern'\n}) => {\n  // 使用专业配色方案\n  const colors = getChartColors(colorScheme, 3);\n  const primaryColor = colors[0];\n  const secondaryColor = colors[1];\n  const accentColor = colors[2];\n  \n  // 获取趋势颜色\n  const trendColor = trend === 'up' ? getStatusColor('success') : \n                    trend === 'down' ? getStatusColor('error') : \n                    getStatusColor('warning');\n  const colorClasses = {\n    blue: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-600',\n      accent: 'text-blue-800',\n      gradient: 'from-blue-500 to-blue-600'\n    },\n    green: {\n      bg: 'bg-green-50',\n      border: 'border-green-200',\n      text: 'text-green-600',\n      accent: 'text-green-800',\n      gradient: 'from-green-500 to-green-600'\n    },\n    red: {\n      bg: 'bg-red-50',\n      border: 'border-red-200',\n      text: 'text-red-600',\n      accent: 'text-red-800',\n      gradient: 'from-red-500 to-red-600'\n    },\n    yellow: {\n      bg: 'bg-yellow-50',\n      border: 'border-yellow-200',\n      text: 'text-yellow-600',\n      accent: 'text-yellow-800',\n      gradient: 'from-yellow-500 to-yellow-600'\n    },\n    purple: {\n      bg: 'bg-purple-50',\n      border: 'border-purple-200',\n      text: 'text-purple-600',\n      accent: 'text-purple-800',\n      gradient: 'from-purple-500 to-purple-600'\n    },\n    indigo: {\n      bg: 'bg-indigo-50',\n      border: 'border-indigo-200',\n      text: 'text-indigo-600',\n      accent: 'text-indigo-800',\n      gradient: 'from-indigo-500 to-indigo-600'\n    }\n  };\n\n  const sizeClasses = {\n    sm: {\n      container: 'p-4',\n      title: 'text-sm',\n      value: 'text-2xl',\n      icon: 'w-8 h-8'\n    },\n    md: {\n      container: 'p-6',\n      title: 'text-base',\n      value: 'text-3xl',\n      icon: 'w-10 h-10'\n    },\n    lg: {\n      container: 'p-8',\n      title: 'text-lg',\n      value: 'text-4xl',\n      icon: 'w-12 h-12'\n    }\n  };\n\n  const getTrendIcon = () => {\n    if (trend === 'up') {\n      return <ArrowTrendingUpIcon className=\"w-4 h-4 text-green-500\" />;\n    } else if (trend === 'down') {\n      return <ArrowTrendingDownIcon className=\"w-4 h-4 text-red-500\" />;\n    }\n    return null;\n  };\n\n  const getChangeIcon = () => {\n    if (change === undefined) return null;\n    \n    if (change > 0) {\n      return <ArrowUpIcon className=\"w-3 h-3 text-green-500\" />;\n    } else if (change < 0) {\n      return <ArrowDownIcon className=\"w-3 h-3 text-red-500\" />;\n    }\n    return null;\n  };\n\n  const getChangeColor = () => {\n    if (change === undefined) return 'text-gray-500';\n    return change > 0 ? 'text-green-500' : change < 0 ? 'text-red-500' : 'text-gray-500';\n  };\n\n  const generateSparkline = () => {\n    if (!showSparkline || sparklineData.length === 0) return null;\n\n    const width = 80;\n    const height = 20;\n    const max = Math.max(...sparklineData);\n    const min = Math.min(...sparklineData);\n    const range = max - min || 1;\n\n    const points = sparklineData.map((value, index) => {\n      const x = (index / (sparklineData.length - 1)) * width;\n      const y = height - ((value - min) / range) * height;\n      return `${x},${y}`;\n    }).join(' ');\n\n    return (\n      <div className=\"mt-2\">\n        <svg width={width} height={height} className=\"overflow-visible\">\n          <motion.polyline\n            fill=\"none\"\n            stroke={`url(#sparkline-gradient-${color})`}\n            strokeWidth=\"2\"\n            points={points}\n            initial={{ pathLength: 0 }}\n            animate={{ pathLength: 1 }}\n            transition={{ duration: 1, ease: \"easeInOut\" }}\n          />\n          <defs>\n            <linearGradient id={`sparkline-gradient-${color}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n              <stop offset=\"0%\" className={colorClasses[color].text} />\n              <stop offset=\"100%\" className={colorClasses[color].accent} />\n            </linearGradient>\n          </defs>\n        </svg>\n      </div>\n    );\n  };\n\n  const generateProgressBar = () => {\n    if (target === undefined || typeof value !== 'number') return null;\n\n    const progress = Math.min((value / target) * 100, 100);\n    const isOverTarget = value > target;\n\n    return (\n      <div className=\"mt-3\">\n        <div className=\"flex justify-between text-xs text-gray-500 mb-1\">\n          <span>进度</span>\n          <span>{progress.toFixed(1)}%</span>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <motion.div\n            className={`h-2 rounded-full bg-gradient-to-r ${\n              isOverTarget ? 'from-green-400 to-green-600' : colorClasses[color].gradient\n            }`}\n            initial={{ width: 0 }}\n            animate={{ width: `${Math.min(progress, 100)}%` }}\n            transition={{ duration: 1, ease: \"easeOut\" }}\n          />\n        </div>\n        {isOverTarget && (\n          <div className=\"text-xs text-green-600 mt-1 flex items-center\">\n            <ArrowUpIcon className=\"w-3 h-3 mr-1\" />\n            超出目标 {((value - target) / target * 100).toFixed(1)}%\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <motion.div\n      className={`\n        ${colorClasses[color].bg} ${colorClasses[color].border}\n        ${sizeClasses[size].container}\n        border rounded-xl shadow-sm hover:shadow-md transition-all duration-300\n        relative overflow-hidden backdrop-blur-sm\n      `}\n      style={{\n        background: `linear-gradient(135deg, ${primaryColor}15, ${secondaryColor}10, ${accentColor}05)`,\n        borderColor: `${primaryColor}30`,\n        boxShadow: `0 8px 32px ${primaryColor}20, inset 0 1px 0 ${primaryColor}20`\n      }}\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      whileHover={{ \n        scale: 1.03, \n        y: -4,\n        boxShadow: `0 12px 40px ${primaryColor}30, inset 0 1px 0 ${primaryColor}30`\n      }}\n    >\n      {/* 背景装饰 */}\n      <div \n        className=\"absolute inset-0 opacity-10\"\n        style={{\n          background: `radial-gradient(circle at 20% 20%, ${primaryColor}40, transparent 50%),\n                      radial-gradient(circle at 80% 80%, ${accentColor}30, transparent 50%)`\n        }}\n      />\n      \n      {/* 头部 */}\n      <div className=\"flex items-start justify-between mb-4 relative z-10\">\n        <div className=\"flex items-center gap-3\">\n          {icon && (\n            <motion.div \n              className={`p-3 rounded-xl backdrop-blur-sm border ${sizeClasses[size].icon} flex-shrink-0`}\n              style={{ \n                background: `linear-gradient(135deg, ${primaryColor}20, ${secondaryColor}15)`,\n                borderColor: `${primaryColor}30`,\n                boxShadow: `0 4px 12px ${primaryColor}20`,\n                color: primaryColor\n              }}\n              whileHover={{ scale: 1.1, rotate: 5 }}\n              transition={{ duration: 0.2 }}\n            >\n              {icon}\n            </motion.div>\n          )}\n          <div className=\"flex-1\">\n            <h3 className={`${sizeClasses[size].title} font-medium text-black mb-1`}>\n              {title}\n            </h3>\n            {description && (\n              <p className=\"text-xs text-gray-400\">{description}</p>\n            )}\n            <div className=\"w-8 h-0.5 rounded-full mt-1\" style={{ backgroundColor: primaryColor }} />\n          </div>\n        </div>\n      </div>\n\n      {/* 主要数值 */}\n      <div className=\"flex items-end justify-between mb-2 relative z-10\">\n        <div className=\"flex items-baseline\">\n          <motion.span\n            className={`${sizeClasses[size].value} font-bold`}\n            style={{ \n              color: primaryColor,\n              textShadow: `0 0 20px ${primaryColor}40`\n            }}\n            initial={{ scale: 0 }}\n            animate={{ scale: 1 }}\n            transition={{ duration: 0.5, delay: 0.2 }}\n          >\n            {typeof value === 'number' ? value.toLocaleString() : value}\n          </motion.span>\n          {unit && (\n            <span \n              className=\"ml-2 text-sm\"\n              style={{ color: secondaryColor }}\n            >\n              {unit}\n            </span>\n          )}\n        </div>\n        \n        {getTrendIcon()}\n      </div>\n\n      {/* 变化指标 */}\n      {change !== undefined && (\n        <motion.div \n          className=\"flex items-center text-sm px-3 py-1.5 rounded-lg backdrop-blur-sm border mb-2 relative z-10\"\n          style={{\n            background: `linear-gradient(135deg, ${trendColor}15, ${trendColor}10)`,\n            borderColor: `${trendColor}30`,\n            color: trendColor.text\n          }}\n          initial={{ scale: 0.8, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          transition={{ delay: 0.2 }}\n        >\n          {getChangeIcon()}\n          <span className=\"ml-1 font-bold\">\n            {change > 0 ? '+' : ''}{change}\n            {changeType === 'percentage' ? '%' : ''}\n          </span>\n          <span className=\"ml-1 text-gray-400\">vs 上期</span>\n        </motion.div>\n      )}\n\n      {/* 迷你图表 */}\n      {showSparkline && sparklineData.length > 0 && (\n        <div className=\"mt-2 relative z-10\">\n          <svg width={80} height={20} className=\"overflow-visible\">\n            <defs>\n              <linearGradient id={`sparkline-gradient-${color}-${title}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor={primaryColor} />\n                <stop offset=\"50%\" stopColor={secondaryColor} />\n                <stop offset=\"100%\" stopColor={accentColor} />\n              </linearGradient>\n              <filter id={`sparkline-glow-${color}-${title}`}>\n                <feGaussianBlur stdDeviation=\"1\" result=\"coloredBlur\"/>\n                <feMerge> \n                  <feMergeNode in=\"coloredBlur\"/>\n                  <feMergeNode in=\"SourceGraphic\"/> \n                </feMerge>\n              </filter>\n            </defs>\n            <motion.polyline\n              fill=\"none\"\n              stroke={`url(#sparkline-gradient-${color}-${title})`}\n              strokeWidth=\"3\"\n              filter={`url(#sparkline-glow-${color}-${title})`}\n              points={sparklineData.map((value, index) => {\n                const width = 80;\n                const height = 20;\n                const max = Math.max(...sparklineData);\n                const min = Math.min(...sparklineData);\n                const range = max - min || 1;\n                const x = (index / (sparklineData.length - 1)) * width;\n                const y = height - ((value - min) / range) * height;\n                return `${x},${y}`;\n              }).join(' ')}\n              initial={{ pathLength: 0 }}\n              animate={{ pathLength: 1 }}\n              transition={{ duration: 1, ease: \"easeInOut\" }}\n            />\n          </svg>\n        </div>\n      )}\n\n      {/* 进度条 */}\n      {target !== undefined && typeof value === 'number' && (\n        <div className=\"mt-3 relative z-10\">\n          <div className=\"flex justify-between text-xs mb-1\">\n            <span className=\"text-black font-medium\">进度</span>\n            <span className=\"font-bold\" style={{ color: primaryColor }}>\n              {Math.min((value / target) * 100, 100).toFixed(1)}%\n            </span>\n          </div>\n          <div className=\"w-full bg-gray-700/50 rounded-full h-3 backdrop-blur-sm border border-gray-600/30\">\n            <motion.div\n              className=\"h-3 rounded-full relative overflow-hidden\"\n              style={{ \n                background: `linear-gradient(90deg, ${primaryColor}, ${secondaryColor}, ${accentColor})`,\n                boxShadow: `0 0 10px ${primaryColor}60`\n              }}\n              initial={{ width: 0 }}\n              animate={{ width: `${Math.min((value / target) * 100, 100)}%` }}\n              transition={{ duration: 1.5, delay: 0.5, ease: \"easeOut\" }}\n            >\n              <div \n                className=\"absolute inset-0 opacity-30\"\n                style={{\n                  background: `repeating-linear-gradient(\n                    90deg,\n                    transparent,\n                    transparent 10px,\n                    rgba(255,255,255,0.1) 10px,\n                    rgba(255,255,255,0.1) 20px\n                  )`\n                }}\n              />\n            </motion.div>\n          </div>\n          {value > target && (\n            <div className=\"text-xs mt-1 flex items-center\" style={{ color: getStatusColor('success').text }}>\n              <ArrowUpIcon className=\"w-3 h-3 mr-1\" />\n              超出目标 {((value - target) / target * 100).toFixed(1)}%\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* 目标信息 */}\n      {target !== undefined && (\n        <div className=\"mt-2 text-xs text-gray-500\">\n          目标: {target.toLocaleString()}{unit}\n        </div>\n      )}\n    </motion.div>\n  );\n};\n\nexport default KPICard;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { getChartColors, gradientSchemes } from '../../utils/colorSchemes';\n\ninterface GaugeChartProps {\n  value: number;\n  max?: number;\n  min?: number;\n  size?: number;\n  color?: string;\n  backgroundColor?: string;\n  title?: string;\n  unit?: string;\n  showValue?: boolean;\n  colorScheme?: 'modern' | 'business' | 'tech' | 'warm' | 'cool';\n}\n\nconst GaugeChart: React.FC<GaugeChartProps> = ({\n  value,\n  max = 100,\n  min = 0,\n  size = 200,\n  color,\n  backgroundColor = '#374151',\n  title,\n  unit = '',\n  showValue = true,\n  colorScheme = 'modern'\n}) => {\n  // 使用专业配色方案\n  const colors = getChartColors(colorScheme, 3);\n  const primaryColor = color || colors[0];\n  const secondaryColor = colors[1];\n  const accentColor = colors[2];\n  const percentage = Math.min((value / max) * 100, 100);\n  const strokeDasharray = `${percentage * 2.51} 251`;\n  const radius = 80;\n  const circumference = 2 * Math.PI * radius;\n  const strokeDashoffset = circumference - (percentage / 100) * circumference;\n\n  return (\n    <div className=\"flex flex-col items-center p-6\">\n      <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">{title}</h3>\n      \n      <div className=\"relative\" style={{ width: size, height: size }}>\n        <svg\n          width={size}\n          height={size}\n          viewBox=\"0 0 200 200\"\n          className=\"transform -rotate-90\"\n        >\n          {/* 背景圆环 */}\n          <circle\n            cx=\"100\"\n            cy=\"100\"\n            r={radius}\n            stroke={backgroundColor}\n            strokeWidth=\"12\"\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            opacity={0.3}\n          />\n          \n          {/* 进度圆环 - 渐变效果 */}\n          <defs>\n            <linearGradient id={`gauge-gradient-${Math.random()}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={primaryColor} />\n              <stop offset=\"50%\" stopColor={secondaryColor} />\n              <stop offset=\"100%\" stopColor={accentColor} />\n            </linearGradient>\n            <filter id={`glow-${Math.random()}`}>\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/> \n              </feMerge>\n            </filter>\n          </defs>\n          <motion.circle\n            cx=\"100\"\n            cy=\"100\"\n            r={radius}\n            stroke={`url(#gauge-gradient-${Math.random()})`}\n            strokeWidth=\"12\"\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeDasharray={circumference}\n            strokeDashoffset={strokeDashoffset}\n            filter={`url(#glow-${Math.random()})`}\n            initial={{ strokeDashoffset: circumference }}\n            animate={{ strokeDashoffset }}\n            transition={{ duration: 2, ease: \"easeOut\" }}\n          />\n          \n          {/* 渐变定义 */}\n          <defs>\n            <linearGradient id={`gauge-gradient-${title}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={color} stopOpacity=\"0.8\" />\n              <stop offset=\"100%\" stopColor={color} stopOpacity=\"1\" />\n            </linearGradient>\n          </defs>\n        </svg>\n        \n        {/* 中心数值 */}\n        {showValue && (\n          <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n            <motion.div\n              className=\"text-3xl font-bold\"\n              style={{ color: primaryColor }}\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 1, duration: 0.5 }}\n            >\n              {value.toFixed(1)}\n            </motion.div>\n            {unit && (\n              <motion.div\n                className=\"text-sm text-gray-300 mt-1\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ duration: 1, delay: 0.7 }}\n              >\n                {unit}\n              </motion.div>\n            )}\n            <div className=\"text-xs text-gray-400 mt-1\">\n              {percentage.toFixed(1)}%\n            </div>\n          </div>\n        )}\n        \n        {/* 刻度线 */}\n        {Array.from({ length: 11 }, (_, i) => {\n          const angle = (i * 36) - 90; // 0-360度，起始点在顶部\n          const x1 = 100 + (radius - 15) * Math.cos((angle * Math.PI) / 180);\n          const y1 = 100 + (radius - 15) * Math.sin((angle * Math.PI) / 180);\n          const x2 = 100 + (radius - 5) * Math.cos((angle * Math.PI) / 180);\n          const y2 = 100 + (radius - 5) * Math.sin((angle * Math.PI) / 180);\n          \n          return (\n            <line\n              key={i}\n              x1={x1}\n              y1={y1}\n              x2={x2}\n              y2={y2}\n              stroke=\"#9CA3AF\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n            />\n          );\n        })}\n      </div>\n      \n      {/* 范围指示器 */}\n      <div className=\"flex items-center justify-between w-full mt-4 text-sm text-gray-500\">\n        <span>0</span>\n        <span className=\"font-medium\">{max} {unit}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default GaugeChart;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { getChartColors, gradientSchemes } from '../../utils/colorSchemes';\n\ninterface RadarDataPoint {\n  label: string;\n  value: number;\n  maxValue: number;\n}\n\ninterface RadarChartProps {\n  data: RadarDataPoint[];\n  title: string;\n  size?: number;\n  color?: string;\n  fillOpacity?: number;\n  colorScheme?: 'modern' | 'business' | 'tech' | 'warm' | 'cool';\n}\n\nconst RadarChart: React.FC<RadarChartProps> = ({\n  data,\n  title,\n  size = 300,\n  color,\n  fillOpacity = 0.3,\n  colorScheme = 'modern'\n}) => {\n  // 使用专业配色方案\n  const colors = getChartColors(colorScheme, 3);\n  const primaryColor = color || colors[0];\n  const secondaryColor = colors[1];\n  const accentColor = colors[2];\n  const center = size / 2;\n  const radius = size * 0.35;\n  const levels = 5;\n  \n  // 计算每个数据点的角度\n  const angleStep = (2 * Math.PI) / data.length;\n  \n  // 生成网格线\n  const generateGridLines = () => {\n    const lines = [];\n    \n    // 同心圆\n    for (let i = 1; i <= levels; i++) {\n      const r = (radius * i) / levels;\n      lines.push(\n        <circle\n          key={`circle-${i}`}\n          cx={center}\n          cy={center}\n          r={r}\n          fill={i === levels ? `${secondaryColor}10` : \"none\"}\n          stroke={i % 2 === 0 ? secondaryColor : accentColor}\n          strokeWidth={i === levels ? \"2\" : \"1\"}\n          opacity={0.4}\n        />\n      );\n    }\n    \n    // 射线\n    data.forEach((_, index) => {\n      const angle = index * angleStep - Math.PI / 2;\n      const x = center + radius * Math.cos(angle);\n      const y = center + radius * Math.sin(angle);\n      \n      lines.push(\n        <line\n          key={`line-${index}`}\n          x1={center}\n          y1={center}\n          x2={x}\n          y2={y}\n          stroke=\"#E5E7EB\"\n          strokeWidth=\"1\"\n          opacity={0.5}\n        />\n      );\n    });\n    \n    return lines;\n  };\n  \n  // 生成数据多边形路径\n  const generateDataPath = () => {\n    const points = data.map((point, index) => {\n      const angle = index * angleStep - Math.PI / 2;\n      const normalizedValue = point.value / point.maxValue;\n      const r = radius * normalizedValue;\n      const x = center + r * Math.cos(angle);\n      const y = center + r * Math.sin(angle);\n      return `${x},${y}`;\n    });\n    \n    return `M ${points.join(' L ')} Z`;\n  };\n  \n  // 生成标签\n  const generateLabels = () => {\n    return data.map((point, index) => {\n      const angle = index * angleStep - Math.PI / 2;\n      const labelRadius = radius + 30;\n      const x = center + labelRadius * Math.cos(angle);\n      const y = center + labelRadius * Math.sin(angle);\n      \n      return (\n        <g key={`label-${index}`}>\n          <text\n            x={x}\n            y={y}\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n            className=\"text-sm font-semibold\"\n            style={{ fill: secondaryColor }}\n          >\n            {point.label}\n          </text>\n          <text\n            x={x}\n            y={y + 16}\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n            className=\"text-xs fill-gray-500\"\n          >\n            {point.value.toFixed(1)}\n          </text>\n        </g>\n      );\n    });\n  };\n  \n  // 生成数据点\n  const generateDataPoints = () => {\n    return data.map((point, index) => {\n      const angle = index * angleStep - Math.PI / 2;\n      const normalizedValue = point.value / point.maxValue;\n      const r = radius * normalizedValue;\n      const x = center + r * Math.cos(angle);\n      const y = center + r * Math.sin(angle);\n      \n      return (\n        <motion.circle\n          key={`point-${index}`}\n          cx={x}\n          cy={y}\n          r=\"5\"\n          fill={primaryColor}\n          stroke={secondaryColor}\n          strokeWidth=\"3\"\n          initial={{ scale: 0, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          transition={{ delay: index * 0.1 + 0.5, duration: 0.3 }}\n          style={{\n            filter: `drop-shadow(0 2px 4px ${primaryColor}40)`\n          }}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"flex flex-col items-center p-6\">\n      <h3 className=\"text-lg font-semibold text-gray-800 mb-6\">{title}</h3>\n      \n      <div className=\"relative\">\n        <svg width={size} height={size} className=\"overflow-visible\">\n          {/* 渐变定义 */}\n          <defs>\n            <linearGradient id={`radar-gradient-${title}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={primaryColor} stopOpacity={fillOpacity * 1.5} />\n              <stop offset=\"50%\" stopColor={secondaryColor} stopOpacity={fillOpacity} />\n              <stop offset=\"100%\" stopColor={accentColor} stopOpacity={fillOpacity * 0.5} />\n            </linearGradient>\n            <filter id={`radar-glow-${title}`}>\n              <feGaussianBlur stdDeviation=\"2\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/> \n              </feMerge>\n            </filter>\n          </defs>\n          \n          {/* 网格线 */}\n          {generateGridLines()}\n          \n          {/* 数据区域 */}\n          <motion.path\n            d={generateDataPath()}\n            fill={`url(#radar-gradient-${title})`}\n            stroke={primaryColor}\n            strokeWidth=\"3\"\n            initial={{ pathLength: 0, opacity: 0 }}\n            animate={{ pathLength: 1, opacity: 1 }}\n            transition={{ duration: 1.5, ease: \"easeOut\" }}\n            filter={`url(#radar-glow-${title})`}\n          />\n          \n          {/* 数据点 */}\n          {generateDataPoints()}\n          \n          {/* 标签 */}\n          {generateLabels()}\n        </svg>\n      </div>\n      \n      {/* 图例 */}\n      <div className=\"mt-4 grid grid-cols-2 gap-2 text-xs text-gray-600\">\n        {data.map((point, index) => (\n          <div key={index} className=\"flex items-center space-x-2\">\n            <div \n              className=\"w-3 h-3 rounded-full\" \n              style={{ backgroundColor: primaryColor }}\n            />\n            <span>{point.label}: {((point.value / point.maxValue) * 100).toFixed(1)}%</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RadarChart;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { getHeatmapColor, getChartColors } from '../../utils/colorSchemes';\n\ninterface HeatmapDataPoint {\n  x: string;\n  y: string;\n  value: number;\n  label?: string;\n}\n\ninterface HeatmapChartProps {\n  data: HeatmapDataPoint[];\n  title: string;\n  xLabels: string[];\n  yLabels: string[];\n  colorScheme?: 'blue' | 'green' | 'red' | 'purple' | 'modern' | 'business' | 'tech' | 'warm' | 'cool';\n  cellSize?: number;\n}\n\nconst HeatmapChart: React.FC<HeatmapChartProps> = ({\n  data,\n  title,\n  xLabels,\n  yLabels,\n  colorScheme = 'modern',\n  cellSize = 40\n}) => {\n  // 使用专业配色方案\n  const chartColors = getChartColors(colorScheme as any, 5);\n  const primaryColor = chartColors[0];\n  const secondaryColor = chartColors[1];\n  const accentColor = chartColors[2];\n  const maxValue = Math.max(...data.map(d => d.value));\n  const minValue = Math.min(...data.map(d => d.value));\n  \n  const colorSchemes = {\n    blue: {\n      light: '#EBF8FF',\n      medium: '#3182CE',\n      dark: '#1A365D'\n    },\n    green: {\n      light: '#F0FFF4',\n      medium: '#38A169',\n      dark: '#1A202C'\n    },\n    red: {\n      light: '#FED7D7',\n      medium: '#E53E3E',\n      dark: '#742A2A'\n    },\n    purple: {\n      light: '#FAF5FF',\n      medium: '#805AD5',\n      dark: '#44337A'\n    },\n    modern: {\n      light: primaryColor,\n      medium: secondaryColor,\n      dark: accentColor\n    }\n  };\n  \n  const colors = colorSchemes[colorScheme as keyof typeof colorSchemes] || colorSchemes.modern;\n  \n  const getColor = (value: number) => {\n    if (maxValue === minValue) return colors.medium;\n    \n    const intensity = (value - minValue) / (maxValue - minValue);\n    \n    // 使用渐变色彩\n    if (['modern', 'business', 'tech', 'warm', 'cool'].includes(colorScheme)) {\n      const r = Math.round(255 * (1 - intensity) + parseInt(colors.dark.slice(1, 3), 16) * intensity);\n      const g = Math.round(255 * (1 - intensity) + parseInt(colors.dark.slice(3, 5), 16) * intensity);\n      const b = Math.round(255 * (1 - intensity) + parseInt(colors.dark.slice(5, 7), 16) * intensity);\n      return `rgb(${r}, ${g}, ${b})`;\n    }\n    \n    if (intensity < 0.3) {\n      return colors.light;\n    } else if (intensity < 0.7) {\n      return colors.medium;\n    } else {\n      return colors.dark;\n    }\n  };\n  \n  const getOpacity = (value: number) => {\n    if (maxValue === minValue) return 0.8;\n    const intensity = (value - minValue) / (maxValue - minValue);\n    return 0.3 + intensity * 0.7;\n  };\n  \n  const width = xLabels.length * cellSize + 100;\n  const height = yLabels.length * cellSize + 100;\n  \n  return (\n    <div className=\"flex flex-col items-center p-6\">\n      <h3 className=\"text-lg font-semibold text-gray-800 mb-6\">{title}</h3>\n      \n      <div className=\"relative overflow-auto\">\n        <svg width={width} height={height} className=\"overflow-visible\">\n          {/* 渐变定义 */}\n          <defs>\n            <linearGradient id={`heatmap-gradient-${title}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={colors.light} stopOpacity=\"0.8\" />\n              <stop offset=\"100%\" stopColor={colors.dark} stopOpacity=\"1\" />\n            </linearGradient>\n            \n            <filter id={`heatmap-shadow-${title}`}>\n              <feDropShadow dx=\"2\" dy=\"2\" stdDeviation=\"3\" floodOpacity=\"0.3\"/>\n            </filter>\n          </defs>\n          \n          {/* Y轴标签 */}\n          {yLabels.map((label, yIndex) => (\n            <text\n              key={`y-label-${yIndex}`}\n              x=\"40\"\n              y={60 + yIndex * cellSize + cellSize / 2}\n              textAnchor=\"end\"\n              dominantBaseline=\"middle\"\n              className=\"text-sm font-medium fill-current\"\n              style={{ fill: secondaryColor }}\n            >\n              {label}\n            </text>\n          ))}\n          \n          {/* X轴标签 */}\n          {xLabels.map((label, xIndex) => (\n            <text\n              key={`x-label-${xIndex}`}\n              x={60 + xIndex * cellSize + cellSize / 2}\n              y=\"40\"\n              textAnchor=\"middle\"\n              dominantBaseline=\"middle\"\n              className=\"text-sm font-medium fill-current\"\n              style={{ fill: secondaryColor }}\n              transform={`rotate(-45, ${60 + xIndex * cellSize + cellSize / 2}, 40)`}\n            >\n              {label}\n            </text>\n          ))}\n          \n          {/* 热力图单元格 */}\n          {data.map((point, index) => {\n            const xIndex = xLabels.indexOf(point.x);\n            const yIndex = yLabels.indexOf(point.y);\n            \n            if (xIndex === -1 || yIndex === -1) return null;\n            \n            const x = 50 + xIndex * cellSize;\n            const y = 50 + yIndex * cellSize;\n            const color = getColor(point.value);\n            const opacity = getOpacity(point.value);\n            \n            return (\n              <g key={`cell-${index}`}>\n                <motion.rect\n                  x={x}\n                  y={y}\n                  width={cellSize - 2}\n                  height={cellSize - 2}\n                  fill={color}\n                  opacity={opacity}\n                  rx=\"4\"\n                  ry=\"4\"\n                  initial={{ scale: 0, opacity: 0 }}\n                  animate={{ scale: 1, opacity }}\n                  transition={{ \n                    delay: (xIndex + yIndex) * 0.05,\n                    duration: 0.3,\n                    ease: \"easeOut\"\n                  }}\n                  filter={`url(#heatmap-shadow-${title})`}\n                  className=\"hover:stroke-gray-800 hover:stroke-2 cursor-pointer\"\n                />\n                \n                {/* 数值标签 */}\n                <motion.text\n                  x={x + cellSize / 2}\n                  y={y + cellSize / 2}\n                  textAnchor=\"middle\"\n                  dominantBaseline=\"middle\"\n                  className=\"text-xs font-bold pointer-events-none\"\n                  style={{ \n                    fill: opacity > 0.6 ? '#ffffff' : '#1f2937',\n                    filter: 'drop-shadow(0 1px 2px rgba(0,0,0,0.3))'\n                  }}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ delay: (xIndex + yIndex) * 0.05 + 0.2 }}\n                >\n                  {point.value}\n                </motion.text>\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n      \n      {/* 颜色图例 */}\n      <div className=\"mt-6 flex items-center space-x-4\">\n        <span className=\"text-sm text-gray-600\">低</span>\n        <div className=\"flex space-x-1\">\n          <div className=\"w-6 h-4 rounded\" style={{ backgroundColor: colors.light }} />\n          <div className=\"w-6 h-4 rounded\" style={{ backgroundColor: colors.medium }} />\n          <div className=\"w-6 h-4 rounded\" style={{ backgroundColor: colors.dark }} />\n        </div>\n        <span className=\"text-sm text-gray-600\">高</span>\n        <div className=\"ml-4 text-sm text-gray-500\">\n          范围: {minValue} - {maxValue}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeatmapChart;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { getChartColors, getGradientCSS } from '../../utils/colorSchemes';\n\ninterface TrendDataPoint {\n  x: number | string;\n  y: number;\n  label?: string;\n}\n\ninterface TrendChartProps {\n  data: TrendDataPoint[];\n  title: string;\n  xAxisLabel?: string;\n  yAxisLabel?: string;\n  color?: string;\n  showArea?: boolean;\n  showPoints?: boolean;\n  width?: number;\n  height?: number;\n  colorScheme?: 'modern' | 'business' | 'tech' | 'warm' | 'cool';\n}\n\nconst TrendChart: React.FC<TrendChartProps> = ({\n  data,\n  title,\n  xAxisLabel = '',\n  yAxisLabel = '',\n  color,\n  showArea = true,\n  showPoints = true,\n  width = 600,\n  height = 400,\n  colorScheme = 'modern'\n}) => {\n  // 使用专业配色方案\n  const colors = getChartColors(colorScheme, 3);\n  const primaryColor = color || colors[0];\n  const secondaryColor = colors[1];\n  const accentColor = colors[2];\n  const padding = { top: 40, right: 40, bottom: 60, left: 60 };\n  const chartWidth = width - padding.left - padding.right;\n  const chartHeight = height - padding.top - padding.bottom;\n  \n  const xValues = data.map(d => typeof d.x === 'string' ? parseFloat(d.x) || 0 : d.x);\n  const yValues = data.map(d => d.y);\n  \n  const xMin = Math.min(...xValues);\n  const xMax = Math.max(...xValues);\n  const yMin = Math.min(...yValues);\n  const yMax = Math.max(...yValues);\n  \n  const xRange = xMax - xMin || 1;\n  const yRange = yMax - yMin || 1;\n  \n  // 坐标转换函数\n  const getX = (value: number) => padding.left + ((value - xMin) / xRange) * chartWidth;\n  const getY = (value: number) => padding.top + chartHeight - ((value - yMin) / yRange) * chartHeight;\n  \n  // 生成路径\n  const generatePath = () => {\n    if (data.length === 0) return '';\n    \n    const points = data.map((point, index) => {\n      const x = getX(xValues[index]);\n      const y = getY(point.y);\n      return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n    });\n    \n    return points.join(' ');\n  };\n  \n  // 生成面积路径\n  const generateAreaPath = () => {\n    if (data.length === 0) return '';\n    \n    const linePath = generatePath();\n    const firstX = getX(xValues[0]);\n    const lastX = getX(xValues[xValues.length - 1]);\n    const bottomY = getY(yMin);\n    \n    return `${linePath} L ${lastX} ${bottomY} L ${firstX} ${bottomY} Z`;\n  };\n  \n  // 生成网格线\n  const generateGridLines = () => {\n    const lines = [];\n    const gridCount = 5;\n    \n    // 水平网格线\n    for (let i = 0; i <= gridCount; i++) {\n      const y = padding.top + (i * chartHeight) / gridCount;\n      const value = yMax - (i * yRange) / gridCount;\n      \n      lines.push(\n        <g key={`h-grid-${i}`}>\n          <line\n            x1={padding.left}\n            y1={y}\n            x2={padding.left + chartWidth}\n            y2={y}\n            stroke=\"#E5E7EB\"\n            strokeWidth=\"1\"\n            opacity=\"0.5\"\n          />\n          <text\n            x={padding.left - 10}\n            y={y}\n            textAnchor=\"end\"\n            dominantBaseline=\"middle\"\n            className=\"text-xs fill-gray-500\"\n          >\n            {value.toFixed(1)}\n          </text>\n        </g>\n      );\n    }\n    \n    // 垂直网格线\n    for (let i = 0; i <= gridCount; i++) {\n      const x = padding.left + (i * chartWidth) / gridCount;\n      const value = xMin + (i * xRange) / gridCount;\n      \n      lines.push(\n        <g key={`v-grid-${i}`}>\n          <line\n            x1={x}\n            y1={padding.top}\n            x2={x}\n            y2={padding.top + chartHeight}\n            stroke=\"#E5E7EB\"\n            strokeWidth=\"1\"\n            opacity=\"0.5\"\n          />\n          <text\n            x={x}\n            y={padding.top + chartHeight + 20}\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n            className=\"text-xs fill-gray-500\"\n          >\n            {value.toFixed(0)}\n          </text>\n        </g>\n      );\n    }\n    \n    return lines;\n  };\n  \n  // 生成数据点\n  const generateDataPoints = () => {\n    return data.map((point, index) => {\n      const x = getX(xValues[index]);\n      const y = getY(point.y);\n      \n      return (\n        <motion.g key={`point-${index}`}>\n          <motion.circle\n            cx={x}\n            cy={y}\n            r=\"5\"\n            fill={primaryColor}\n            stroke={secondaryColor}\n            strokeWidth=\"3\"\n            filter={`url(#trend-glow-${Math.random()})`}\n            initial={{ scale: 0, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            transition={{ delay: index * 0.1 + 1, duration: 0.3 }}\n            className=\"hover:r-6 cursor-pointer\"\n          />\n          \n          {/* 悬停时显示的数值 */}\n          <motion.g\n            initial={{ opacity: 0, scale: 0 }}\n            whileHover={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.2 }}\n          >\n            <rect\n              x={x - 25}\n              y={y - 35}\n              width=\"50\"\n              height=\"25\"\n              fill=\"rgba(0,0,0,0.8)\"\n              rx=\"4\"\n              ry=\"4\"\n            />\n            <text\n              x={x}\n              y={y - 20}\n              textAnchor=\"middle\"\n              dominantBaseline=\"middle\"\n              className=\"text-xs fill-white font-medium\"\n            >\n              {point.y.toFixed(2)}\n            </text>\n          </motion.g>\n        </motion.g>\n      );\n    });\n  };\n\n  return (\n    <div className=\"flex flex-col items-center p-6\">\n      <h3 className=\"text-lg font-semibold text-gray-800 mb-6\">{title}</h3>\n      \n      <div className=\"relative\">\n        <svg width={width} height={height} className=\"overflow-visible\">\n          {/* 渐变定义 */}\n          <defs>\n            <linearGradient id={`trend-gradient-${title}`} x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={color} stopOpacity=\"0.6\" />\n              <stop offset=\"100%\" stopColor={color} stopOpacity=\"0.1\" />\n            </linearGradient>\n            \n            <filter id={`trend-glow-${title}`}>\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/> \n              </feMerge>\n            </filter>\n          </defs>\n          \n          {/* 网格线 */}\n          <defs>\n            <linearGradient id={`trend-grid-${Math.random()}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={secondaryColor} stopOpacity=\"0.1\" />\n              <stop offset=\"100%\" stopColor={accentColor} stopOpacity=\"0.2\" />\n            </linearGradient>\n          </defs>\n          {generateGridLines()}\n          \n          {/* 面积填充 */}\n          {showArea && (\n            <>\n              <defs>\n                <linearGradient id={`trend-area-${Math.random()}`} x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                  <stop offset=\"0%\" stopColor={primaryColor} stopOpacity=\"0.4\" />\n                  <stop offset=\"50%\" stopColor={secondaryColor} stopOpacity=\"0.2\" />\n                  <stop offset=\"100%\" stopColor={accentColor} stopOpacity=\"0.1\" />\n                </linearGradient>\n              </defs>\n              <motion.path\n                d={generateAreaPath()}\n                fill={`url(#trend-area-${Math.random()})`}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ duration: 1, delay: 0.5 }}\n              />\n            </>\n          )}\n          \n          {/* 趋势线 */}\n          <defs>\n            <linearGradient id={`trend-line-${Math.random()}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n              <stop offset=\"0%\" stopColor={primaryColor} />\n              <stop offset=\"50%\" stopColor={secondaryColor} />\n              <stop offset=\"100%\" stopColor={accentColor} />\n            </linearGradient>\n            <filter id={`trend-glow-${Math.random()}`}>\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/> \n              </feMerge>\n            </filter>\n          </defs>\n          <motion.path\n            d={generatePath()}\n            fill=\"none\"\n            stroke={`url(#trend-line-${Math.random()})`}\n            strokeWidth=\"4\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            filter={`url(#trend-glow-${Math.random()})`}\n            initial={{ pathLength: 0 }}\n            animate={{ pathLength: 1 }}\n            transition={{ duration: 2, ease: \"easeOut\" }}\n          />\n          \n          {/* 数据点 */}\n          {showPoints && generateDataPoints()}\n          \n          {/* 坐标轴标签 */}\n          {xAxisLabel && (\n            <text\n              x={padding.left + chartWidth / 2}\n              y={height - 10}\n              textAnchor=\"middle\"\n              className=\"text-sm font-medium fill-gray-700\"\n            >\n              {xAxisLabel}\n            </text>\n          )}\n          \n          {yAxisLabel && (\n            <text\n              x={15}\n              y={padding.top + chartHeight / 2}\n              textAnchor=\"middle\"\n              className=\"text-sm font-medium fill-gray-700\"\n              transform={`rotate(-90, 15, ${padding.top + chartHeight / 2})`}\n            >\n              {yAxisLabel}\n            </text>\n          )}\n        </svg>\n      </div>\n      \n      {/* 统计信息 */}\n      <div className=\"mt-4 grid grid-cols-3 gap-4 text-sm text-gray-600\">\n        <div className=\"text-center\">\n          <div className=\"font-semibold text-gray-800\">{yMax.toFixed(2)}</div>\n          <div>最大值</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"font-semibold text-gray-800\">{(yValues.reduce((a, b) => a + b, 0) / yValues.length).toFixed(2)}</div>\n          <div>平均值</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"font-semibold text-gray-800\">{yMin.toFixed(2)}</div>\n          <div>最小值</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TrendChart;","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { getChartColors, generateRandomColors } from '../../utils/colorSchemes';\n\ninterface DonutDataPoint {\n  label: string;\n  value: number;\n  color?: string;\n  subData?: DonutDataPoint[];\n}\n\ninterface DonutChartProps {\n  data: DonutDataPoint[];\n  title: string;\n  size?: number;\n  innerRadius?: number;\n  outerRadius?: number;\n  showLabels?: boolean;\n  showPercentages?: boolean;\n  colorScheme?: 'modern' | 'business' | 'tech' | 'warm' | 'cool' | string[];\n}\n\nconst DonutChart: React.FC<DonutChartProps> = ({\n  data,\n  title,\n  size = 300,\n  innerRadius = 60,\n  outerRadius = 120,\n  showLabels = true,\n  showPercentages = true,\n  colorScheme = 'modern'\n}) => {\n  // 使用专业配色方案\n  const colors = Array.isArray(colorScheme) ? colorScheme : getChartColors(colorScheme, data.length);\n  const [hoveredSegment, setHoveredSegment] = useState<number | null>(null);\n  const [selectedSegment, setSelectedSegment] = useState<number | null>(null);\n  \n  const center = size / 2;\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n  \n  // 生成路径\n  const generatePath = (startAngle: number, endAngle: number, innerR: number, outerR: number) => {\n    const startAngleRad = (startAngle * Math.PI) / 180;\n    const endAngleRad = (endAngle * Math.PI) / 180;\n    \n    const x1 = center + innerR * Math.cos(startAngleRad);\n    const y1 = center + innerR * Math.sin(startAngleRad);\n    const x2 = center + outerR * Math.cos(startAngleRad);\n    const y2 = center + outerR * Math.sin(startAngleRad);\n    \n    const x3 = center + outerR * Math.cos(endAngleRad);\n    const y3 = center + outerR * Math.sin(endAngleRad);\n    const x4 = center + innerR * Math.cos(endAngleRad);\n    const y4 = center + innerR * Math.sin(endAngleRad);\n    \n    const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n    \n    return [\n      'M', x1, y1,\n      'L', x2, y2,\n      'A', outerR, outerR, 0, largeArcFlag, 1, x3, y3,\n      'L', x4, y4,\n      'A', innerR, innerR, 0, largeArcFlag, 0, x1, y1,\n      'Z'\n    ].join(' ');\n  };\n  \n  // 生成段落\n  const generateSegments = () => {\n    let currentAngle = -90; // 从顶部开始\n    \n    return data.map((item, index) => {\n      const percentage = (item.value / total) * 100;\n      const segmentAngle = (item.value / total) * 360;\n      const endAngle = currentAngle + segmentAngle;\n      \n      const color = item.color || colors[index] || (Array.isArray(colorScheme) ? colorScheme[index % colorScheme.length] : generateRandomColors(1, colorScheme)[0]);\n      const isHovered = hoveredSegment === index;\n      const isSelected = selectedSegment === index;\n      \n      const adjustedInnerRadius = isHovered || isSelected ? innerRadius - 5 : innerRadius;\n      const adjustedOuterRadius = isHovered || isSelected ? outerRadius + 5 : outerRadius;\n      \n      const path = generatePath(currentAngle, endAngle, adjustedInnerRadius, adjustedOuterRadius);\n      \n      // 计算标签位置\n      const labelAngle = (currentAngle + endAngle) / 2;\n      const labelRadius = (adjustedInnerRadius + adjustedOuterRadius) / 2;\n      const labelX = center + labelRadius * Math.cos((labelAngle * Math.PI) / 180);\n      const labelY = center + labelRadius * Math.sin((labelAngle * Math.PI) / 180);\n      \n      const segment = (\n        <g key={`segment-${index}`}>\n          <defs>\n            <radialGradient id={`donut-gradient-${index}-${title}`} cx=\"50%\" cy=\"50%\" r=\"50%\">\n              <stop offset=\"0%\" stopColor={color} stopOpacity=\"0.9\" />\n              <stop offset=\"70%\" stopColor={color} stopOpacity=\"1\" />\n              <stop offset=\"100%\" stopColor={color} stopOpacity=\"0.8\" />\n            </radialGradient>\n            <filter id={`donut-glow-${index}-${title}`}>\n              <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/> \n              </feMerge>\n            </filter>\n          </defs>\n          <motion.path\n            d={path}\n            fill={`url(#donut-gradient-${index}-${title})`}\n            stroke=\"rgba(255,255,255,0.3)\"\n            strokeWidth=\"2\"\n            filter={isHovered ? `url(#donut-glow-${index}-${title})` : 'none'}\n            initial={{ opacity: 0, scale: 0 }}\n            animate={{ \n              opacity: selectedSegment === null || selectedSegment === index ? 1 : 0.6,\n              scale: isHovered ? 1.08 : 1\n            }}\n            transition={{ delay: index * 0.1, duration: 0.5, ease: \"easeOut\" }}\n            onMouseEnter={() => setHoveredSegment(index)}\n            onMouseLeave={() => setHoveredSegment(null)}\n            onClick={() => setSelectedSegment(selectedSegment === index ? null : index)}\n            className=\"cursor-pointer\"\n          />\n          \n          {/* 标签 */}\n          {showLabels && segmentAngle > 15 && (\n            <motion.text\n              x={labelX}\n              y={labelY}\n              textAnchor=\"middle\"\n              dominantBaseline=\"middle\"\n              className=\"text-xs font-bold fill-current pointer-events-none\"\n              style={{ \n                fill: '#ffffff',\n                filter: 'drop-shadow(0 1px 2px rgba(0,0,0,0.8))'\n              }}\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: index * 0.1 + 0.3 }}\n            >\n              {showPercentages ? `${percentage.toFixed(1)}%` : item.value}\n            </motion.text>\n          )}\n        </g>\n      );\n      \n      currentAngle = endAngle;\n      return segment;\n    });\n  };\n  \n  // 生成中心信息\n  const generateCenterInfo = () => {\n    const selectedItem = selectedSegment !== null ? data[selectedSegment] : null;\n    \n    return (\n      <g>\n        <motion.text\n          x={center}\n          y={center - 10}\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n          className=\"text-2xl font-bold fill-gray-800\"\n          initial={{ opacity: 0, scale: 0 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ delay: 1, duration: 0.5 }}\n        >\n          {selectedItem ? selectedItem.value : total}\n        </motion.text>\n        \n        <motion.text\n          x={center}\n          y={center + 10}\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n          className=\"text-sm fill-gray-600\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 1.2, duration: 0.5 }}\n        >\n          {selectedItem ? selectedItem.label : '总计'}\n        </motion.text>\n      </g>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col items-center p-6\">\n      <h3 className=\"text-lg font-semibold text-gray-800 mb-6\">{title}</h3>\n      \n      <div className=\"relative\">\n        <svg width={size} height={size} className=\"overflow-visible\">\n          {/* 渐变定义 */}\n          <defs>\n            {(Array.isArray(colorScheme) ? colorScheme : getChartColors(colorScheme)).map((color, index) => (\n              <radialGradient key={index} id={`donut-gradient-${index}-${title}`} cx=\"50%\" cy=\"50%\" r=\"50%\">\n                <stop offset=\"0%\" stopColor={color} stopOpacity=\"0.8\" />\n                <stop offset=\"100%\" stopColor={color} stopOpacity=\"1\" />\n              </radialGradient>\n            ))}\n            \n            <filter id={`donut-shadow-${title}`}>\n              <feDropShadow dx=\"2\" dy=\"2\" stdDeviation=\"4\" floodOpacity=\"0.3\"/>\n            </filter>\n          </defs>\n          \n          {/* 背景圆环 */}\n          <circle\n            cx={center}\n            cy={center}\n            r={outerRadius}\n            fill=\"none\"\n            stroke=\"#F3F4F6\"\n            strokeWidth=\"2\"\n          />\n          \n          {/* 段落 */}\n          {generateSegments()}\n          \n          {/* 中心信息 */}\n          {generateCenterInfo()}\n        </svg>\n      </div>\n      \n      {/* 图例 */}\n      <div className=\"mt-6 flex flex-wrap justify-center gap-4\">\n        {data.map((item, index) => {\n          const color = item.color || colors[index] || (Array.isArray(colorScheme) ? colorScheme[index % colorScheme.length] : generateRandomColors(1, colorScheme)[0]);\n          const percentage = (item.value / total) * 100;\n          const isSelected = selectedSegment === index;\n          const isHovered = hoveredSegment === index;\n          \n          return (\n            <motion.div\n              key={index}\n              className={`flex items-center gap-3 px-4 py-3 rounded-xl cursor-pointer transition-all backdrop-blur-sm border ${\n                selectedSegment === null || selectedSegment === index \n                  ? 'opacity-100 border-white/20' \n                  : 'opacity-60 border-white/10'\n              }`}\n              style={{\n                background: isHovered \n                  ? `linear-gradient(135deg, ${color}20, ${color}10)` \n                  : 'rgba(255,255,255,0.05)'\n              }}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: index * 0.1 + 1 }}\n              onMouseEnter={() => setHoveredSegment(index)}\n              onMouseLeave={() => setHoveredSegment(null)}\n              onClick={() => setSelectedSegment(selectedSegment === index ? null : index)}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <div \n                className=\"w-4 h-4 rounded-full shadow-lg flex-shrink-0\" \n                style={{ \n                  background: `radial-gradient(circle, ${color}, ${color}CC)`,\n                  boxShadow: `0 0 8px ${color}60`\n                }}\n              />\n              <div className=\"flex flex-col\">\n                <div className=\"text-sm font-semibold text-white truncate\">\n                  {item.label}\n                </div>\n                <div className=\"text-xs text-gray-300\">\n                  {item.value} ({percentage.toFixed(1)}%)\n                </div>\n              </div>\n            </motion.div>\n          );\n        })}\n      </div>\n      \n      {/* 操作提示 */}\n      <div className=\"mt-4 text-xs text-gray-500 text-center\">\n        点击图例或图表段落查看详情\n      </div>\n    </div>\n  );\n};\n\nexport default DonutChart;","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  FunnelIcon, \n  ArrowsPointingOutIcon, \n  ArrowsPointingInIcon,\n  ChartBarIcon,\n  TableCellsIcon,\n  EyeIcon,\n  MagnifyingGlassIcon\n} from '@heroicons/react/24/outline';\nimport { getChartColors } from '../../utils/colorSchemes';\n\ninterface DataPoint {\n  id: string;\n  label: string;\n  value: number;\n  category: string;\n  subcategory?: string;\n  metadata?: Record<string, any>;\n}\n\ninterface FilterOption {\n  key: string;\n  label: string;\n  values: string[];\n}\n\ninterface InteractiveExplorerProps {\n  data: DataPoint[];\n  title: string;\n  colorScheme?: 'modern' | 'business' | 'tech' | 'warm' | 'cool';\n  onDataChange?: (filteredData: DataPoint[]) => void;\n  onDrillDown?: (dataPoint: DataPoint) => void;\n  enableDrillDown?: boolean;\n  enableFiltering?: boolean;\n  enableZoom?: boolean;\n  chartType?: 'bar' | 'pie' | 'scatter' | 'heatmap';\n}\n\nconst InteractiveExplorer: React.FC<InteractiveExplorerProps> = ({\n  data,\n  title,\n  colorScheme = 'modern',\n  onDataChange,\n  onDrillDown,\n  enableDrillDown = true,\n  enableFiltering = true,\n  enableZoom = true,\n  chartType = 'bar'\n}) => {\n  const [filteredData, setFilteredData] = useState<DataPoint[]>(data);\n  const [selectedFilters, setSelectedFilters] = useState<Record<string, string[]>>({});\n  const [isZoomed, setIsZoomed] = useState(false);\n  const [selectedDataPoint, setSelectedDataPoint] = useState<DataPoint | null>(null);\n  const [viewMode, setViewMode] = useState<'chart' | 'table'>('chart');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const colors = getChartColors(colorScheme, 8);\n\n  // 生成筛选选项\n  const filterOptions: FilterOption[] = [\n    {\n      key: 'category',\n      label: '类别',\n      values: [...new Set(data.map(d => d.category))]\n    },\n    {\n      key: 'subcategory',\n      label: '子类别',\n      values: [...new Set(data.map(d => d.subcategory).filter(Boolean) as string[])]\n    }\n  ];\n\n  // 应用筛选\n  useEffect(() => {\n    let filtered = data;\n\n    // 应用搜索\n    if (searchTerm) {\n      filtered = filtered.filter(d => \n        d.label.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        d.category.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // 应用筛选器\n    Object.entries(selectedFilters).forEach(([key, values]) => {\n      if (values.length > 0) {\n        filtered = filtered.filter(d => {\n          const fieldValue = key === 'category' ? d.category : d.subcategory;\n          return fieldValue && values.includes(fieldValue);\n        });\n      }\n    });\n\n    setFilteredData(filtered);\n    onDataChange?.(filtered);\n  }, [data, selectedFilters, searchTerm, onDataChange]);\n\n  // 处理筛选器变化\n  const handleFilterChange = (filterKey: string, value: string, checked: boolean) => {\n    setSelectedFilters(prev => {\n      const currentValues = prev[filterKey] || [];\n      const newValues = checked \n        ? [...currentValues, value]\n        : currentValues.filter(v => v !== value);\n      \n      return {\n        ...prev,\n        [filterKey]: newValues\n      };\n    });\n  };\n\n  // 处理数据点点击\n  const handleDataPointClick = (dataPoint: DataPoint) => {\n    setSelectedDataPoint(dataPoint);\n    if (enableDrillDown && onDrillDown) {\n      onDrillDown(dataPoint);\n    }\n  };\n\n  // 渲染图表\n  const renderChart = () => {\n    const maxValue = Math.max(...filteredData.map(d => d.value));\n    \n    switch (chartType) {\n      case 'bar':\n        return (\n          <div className=\"space-y-3\">\n            {filteredData.map((dataPoint, index) => (\n              <motion.div\n                key={dataPoint.id}\n                className=\"relative cursor-pointer group\"\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: index * 0.05 }}\n                onClick={() => handleDataPointClick(dataPoint)}\n              >\n                <div className=\"flex items-center justify-between mb-1\">\n                  <span className=\"text-sm font-medium text-black\">\n                    {dataPoint.label}\n                  </span>\n                  <span className=\"text-sm font-bold\" style={{ color: colors[index % colors.length] }}>\n                    {dataPoint.value}\n                  </span>\n                </div>\n                <div className=\"relative h-8 bg-gray-200 rounded-lg overflow-hidden\">\n                  <motion.div\n                    className=\"absolute inset-y-0 left-0 rounded-lg\"\n                    style={{\n                      background: `linear-gradient(90deg, ${colors[index % colors.length]}, ${colors[(index + 1) % colors.length]})`,\n                      boxShadow: `0 0 10px ${colors[index % colors.length]}40`\n                    }}\n                    initial={{ width: 0 }}\n                    animate={{ width: `${(dataPoint.value / maxValue) * 100}%` }}\n                    transition={{ duration: 1, delay: index * 0.1 }}\n                    whileHover={{ \n                      boxShadow: `0 0 20px ${colors[index % colors.length]}60`,\n                      scale: 1.02\n                    }}\n                  />\n                  <div className=\"absolute inset-0 flex items-center px-3\">\n                    <span className=\"text-xs font-medium text-black\">\n                      {dataPoint.category}\n                    </span>\n                  </div>\n                </div>\n                {selectedDataPoint?.id === dataPoint.id && (\n                  <motion.div\n                    className=\"absolute -top-2 -right-2 w-4 h-4 rounded-full border-2 border-white\"\n                    style={{ backgroundColor: colors[index % colors.length] }}\n                    initial={{ scale: 0 }}\n                    animate={{ scale: 1 }}\n                    transition={{ type: \"spring\", stiffness: 300 }}\n                  />\n                )}\n              </motion.div>\n            ))}\n          </div>\n        );\n      \n      case 'pie':\n        const total = filteredData.reduce((sum, d) => sum + d.value, 0);\n        let currentAngle = 0;\n        \n        return (\n          <div className=\"flex items-center justify-center\">\n            <svg width={200} height={200} className=\"overflow-visible\">\n              <defs>\n                {filteredData.map((_, index) => (\n                  <radialGradient key={index} id={`pie-gradient-${index}`} cx=\"50%\" cy=\"50%\" r=\"50%\">\n                    <stop offset=\"0%\" stopColor={colors[index % colors.length]} />\n                    <stop offset=\"100%\" stopColor={colors[(index + 1) % colors.length]} />\n                  </radialGradient>\n                ))}\n              </defs>\n              {filteredData.map((dataPoint, index) => {\n                const percentage = (dataPoint.value / total) * 100;\n                const angle = (dataPoint.value / total) * 360;\n                const startAngle = currentAngle;\n                const endAngle = currentAngle + angle;\n                currentAngle += angle;\n                \n                const startX = 100 + 80 * Math.cos((startAngle - 90) * Math.PI / 180);\n                const startY = 100 + 80 * Math.sin((startAngle - 90) * Math.PI / 180);\n                const endX = 100 + 80 * Math.cos((endAngle - 90) * Math.PI / 180);\n                const endY = 100 + 80 * Math.sin((endAngle - 90) * Math.PI / 180);\n                const largeArcFlag = angle > 180 ? 1 : 0;\n                \n                const pathData = [\n                  `M 100 100`,\n                  `L ${startX} ${startY}`,\n                  `A 80 80 0 ${largeArcFlag} 1 ${endX} ${endY}`,\n                  'Z'\n                ].join(' ');\n                \n                return (\n                  <motion.path\n                    key={dataPoint.id}\n                    d={pathData}\n                    fill={`url(#pie-gradient-${index})`}\n                    stroke=\"rgba(255,255,255,0.1)\"\n                    strokeWidth=\"2\"\n                    className=\"cursor-pointer\"\n                    initial={{ opacity: 0, scale: 0 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    transition={{ delay: index * 0.1 }}\n                    whileHover={{ scale: 1.05 }}\n                    onClick={() => handleDataPointClick(dataPoint)}\n                  />\n                );\n              })}\n            </svg>\n          </div>\n        );\n      \n      default:\n        return renderChart();\n    }\n  };\n\n  // 渲染表格\n  const renderTable = () => (\n    <div className=\"overflow-x-auto\">\n      <table className=\"w-full\">\n        <thead>\n          <tr className=\"border-b border-gray-300\">\n            <th className=\"text-left py-3 px-4 text-sm font-medium text-black\">标签</th>\n            <th className=\"text-left py-3 px-4 text-sm font-medium text-black\">值</th>\n            <th className=\"text-left py-3 px-4 text-sm font-medium text-black\">类别</th>\n            <th className=\"text-left py-3 px-4 text-sm font-medium text-black\">操作</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredData.map((dataPoint, index) => (\n            <motion.tr\n              key={dataPoint.id}\n              className=\"border-b border-gray-200 hover:bg-gray-50 transition-colors\"\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.05 }}\n            >\n              <td className=\"py-3 px-4 text-sm text-black\">{dataPoint.label}</td>\n              <td className=\"py-3 px-4 text-sm font-bold\" style={{ color: colors[index % colors.length] }}>\n                {dataPoint.value}\n              </td>\n              <td className=\"py-3 px-4 text-sm text-gray-600\">{dataPoint.category}</td>\n              <td className=\"py-3 px-4\">\n                <button\n                  onClick={() => handleDataPointClick(dataPoint)}\n                  className=\"text-xs px-2 py-1 rounded-md bg-gray-100 hover:bg-gray-200 text-black transition-colors\"\n                >\n                  查看详情\n                </button>\n              </td>\n            </motion.tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n\n  return (\n    <motion.div\n      className=\"border rounded-xl p-6 relative overflow-hidden bg-white\"\n      style={{\n        borderColor: `${colors[0]}30`,\n        boxShadow: `0 8px 32px ${colors[0]}20`\n      }}\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      layout={isZoomed}\n    >\n\n\n      {/* 头部控制栏 */}\n      <div className=\"flex items-center justify-between mb-6 relative z-10\">\n        <div className=\"flex items-center gap-3\">\n          <h3 className=\"text-lg font-bold text-black\">{title}</h3>\n          <div className=\"w-12 h-0.5 rounded-full\" style={{ backgroundColor: colors[0] }} />\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          {/* 搜索 */}\n          <div className=\"relative\">\n            <MagnifyingGlassIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"搜索...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10 pr-4 py-2 bg-white border border-gray-300 rounded-lg text-sm text-black placeholder-gray-500 focus:outline-none focus:border-blue-500/50 transition-colors\"\n            />\n          </div>\n          \n          {/* 视图切换 */}\n          <div className=\"flex bg-gray-100 rounded-lg p-1\">\n            <button\n              onClick={() => setViewMode('chart')}\n              className={`p-2 rounded-md transition-colors ${\n                viewMode === 'chart' \n                  ? 'bg-blue-500/20 text-blue-400' \n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <ChartBarIcon className=\"w-4 h-4\" />\n            </button>\n            <button\n              onClick={() => setViewMode('table')}\n              className={`p-2 rounded-md transition-colors ${\n                viewMode === 'table' \n                  ? 'bg-blue-500/20 text-blue-400' \n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <TableCellsIcon className=\"w-4 h-4\" />\n            </button>\n          </div>\n          \n          {/* 缩放控制 */}\n          {enableZoom && (\n            <button\n              onClick={() => setIsZoomed(!isZoomed)}\n              className=\"p-2 rounded-lg bg-gray-100 hover:bg-gray-200 text-gray-600 hover:text-gray-800 transition-colors\"\n            >\n              {isZoomed ? (\n                <ArrowsPointingInIcon className=\"w-4 h-4\" />\n              ) : (\n                <ArrowsPointingOutIcon className=\"w-4 h-4\" />\n              )}\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* 筛选器 */}\n      {enableFiltering && (\n        <motion.div\n          className=\"mb-6 relative z-10\"\n          initial={{ opacity: 0, height: 0 }}\n          animate={{ opacity: 1, height: 'auto' }}\n          transition={{ duration: 0.3 }}\n        >\n          <div className=\"flex items-center gap-2 mb-3\">\n            <FunnelIcon className=\"w-4 h-4 text-gray-400\" />\n            <span className=\"text-sm font-medium text-black\">筛选器</span>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {filterOptions.map((option) => (\n              <div key={option.key} className=\"space-y-2\">\n                <label className=\"text-xs font-medium text-gray-600\">{option.label}</label>\n                <div className=\"space-y-1 max-h-32 overflow-y-auto\">\n                  {option.values.map((value) => (\n                    <label key={value} className=\"flex items-center gap-2 cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedFilters[option.key]?.includes(value) || false}\n                        onChange={(e) => handleFilterChange(option.key, value, e.target.checked)}\n                        className=\"w-3 h-3 rounded border-gray-600 bg-gray-800 text-blue-500 focus:ring-blue-500/20\"\n                      />\n                      <span className=\"text-xs text-black\">{value}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </motion.div>\n      )}\n\n      {/* 数据统计 */}\n      <div className=\"flex items-center justify-between mb-4 text-sm text-gray-600 relative z-10\">\n        <span>显示 {filteredData.length} / {data.length} 项</span>\n        {selectedDataPoint && (\n          <motion.div\n            className=\"flex items-center gap-2 px-3 py-1 rounded-lg bg-gray-100 border border-gray-300\"\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n          >\n            <EyeIcon className=\"w-4 h-4\" />\n            <span className=\"text-black\">已选择: {selectedDataPoint.label}</span>\n          </motion.div>\n        )}\n      </div>\n\n      {/* 主要内容区域 */}\n      <motion.div\n        className=\"relative z-10\"\n        layout\n        transition={{ duration: 0.3 }}\n      >\n        <AnimatePresence mode=\"wait\">\n          {viewMode === 'chart' ? (\n            <motion.div\n              key=\"chart\"\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: 20 }}\n              transition={{ duration: 0.3 }}\n            >\n              {renderChart()}\n            </motion.div>\n          ) : (\n            <motion.div\n              key=\"table\"\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              {renderTable()}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default InteractiveExplorer;","import React, { useState, useEffect, createContext, useContext } from 'react';\nimport { motion } from 'framer-motion';\nimport { LinkIcon, ArrowPathIcon } from '@heroicons/react/24/outline';\nimport { getChartColors } from '../../utils/colorSchemes';\n\n// 联动数据类型\ninterface LinkageData {\n  id: string;\n  category: string;\n  value: number;\n  metadata?: Record<string, any>;\n}\n\n// 联动事件类型\ninterface LinkageEvent {\n  type: 'filter' | 'highlight' | 'select' | 'drill';\n  source: string;\n  data: LinkageData[];\n  filters?: Record<string, any>;\n}\n\n// 联动上下文\ninterface LinkageContextType {\n  activeFilters: Record<string, any>;\n  highlightedData: LinkageData[];\n  selectedData: LinkageData[];\n  registerChart: (chartId: string, onLinkageEvent: (event: LinkageEvent) => void) => void;\n  unregisterChart: (chartId: string) => void;\n  triggerLinkage: (event: LinkageEvent) => void;\n  clearLinkage: () => void;\n}\n\nconst LinkageContext = createContext<LinkageContextType | null>(null);\n\n// 联动提供者组件\ninterface ChartLinkageProviderProps {\n  children: React.ReactNode;\n  colorScheme?: 'modern' | 'business' | 'tech' | 'warm' | 'cool';\n}\n\nexport const ChartLinkageProvider: React.FC<ChartLinkageProviderProps> = ({ \n  children, \n  colorScheme = 'modern' \n}) => {\n  const [activeFilters, setActiveFilters] = useState<Record<string, any>>({});\n  const [highlightedData, setHighlightedData] = useState<LinkageData[]>([]);\n  const [selectedData, setSelectedData] = useState<LinkageData[]>([]);\n  const [chartCallbacks, setChartCallbacks] = useState<Map<string, (event: LinkageEvent) => void>>(new Map());\n  const [linkageHistory, setLinkageHistory] = useState<LinkageEvent[]>([]);\n\n  const colors = getChartColors(colorScheme, 6);\n\n  // 注册图表\n  const registerChart = (chartId: string, onLinkageEvent: (event: LinkageEvent) => void) => {\n    setChartCallbacks(prev => new Map(prev.set(chartId, onLinkageEvent)));\n  };\n\n  // 注销图表\n  const unregisterChart = (chartId: string) => {\n    setChartCallbacks(prev => {\n      const newMap = new Map(prev);\n      newMap.delete(chartId);\n      return newMap;\n    });\n  };\n\n  // 触发联动\n  const triggerLinkage = (event: LinkageEvent) => {\n    // 记录联动历史\n    setLinkageHistory(prev => [...prev.slice(-9), event]);\n\n    // 更新状态\n    switch (event.type) {\n      case 'filter':\n        setActiveFilters(event.filters || {});\n        break;\n      case 'highlight':\n        setHighlightedData(event.data);\n        break;\n      case 'select':\n        setSelectedData(event.data);\n        break;\n    }\n\n    // 通知所有注册的图表（除了触发源）\n    chartCallbacks.forEach((callback, chartId) => {\n      if (chartId !== event.source) {\n        callback(event);\n      }\n    });\n  };\n\n  // 清除联动\n  const clearLinkage = () => {\n    setActiveFilters({});\n    setHighlightedData([]);\n    setSelectedData([]);\n    setLinkageHistory([]);\n    \n    // 通知所有图表清除状态\n    const clearEvent: LinkageEvent = {\n      type: 'filter',\n      source: 'system',\n      data: [],\n      filters: {}\n    };\n    \n    chartCallbacks.forEach(callback => callback(clearEvent));\n  };\n\n  const contextValue: LinkageContextType = {\n    activeFilters,\n    highlightedData,\n    selectedData,\n    registerChart,\n    unregisterChart,\n    triggerLinkage,\n    clearLinkage\n  };\n\n  return (\n    <LinkageContext.Provider value={contextValue}>\n      <div className=\"relative\">\n        {children}\n        \n        {/* 联动状态指示器 */}\n        {(Object.keys(activeFilters).length > 0 || highlightedData.length > 0 || selectedData.length > 0) && (\n          <motion.div\n            className=\"fixed top-4 right-4 z-50 backdrop-blur-sm border rounded-xl p-4 max-w-sm\"\n            style={{\n              background: `linear-gradient(135deg, ${colors[0]}15, ${colors[1]}10)`,\n              borderColor: `${colors[0]}30`,\n              boxShadow: `0 8px 32px ${colors[0]}20`\n            }}\n            initial={{ opacity: 0, x: 100 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: 100 }}\n          >\n            <div className=\"flex items-center justify-between mb-3\">\n              <div className=\"flex items-center gap-2\">\n                <LinkIcon className=\"w-4 h-4\" style={{ color: colors[0] }} />\n                <span className=\"text-sm font-medium text-gray-300\">图表联动</span>\n              </div>\n              <button\n                onClick={clearLinkage}\n                className=\"p-1 rounded-md hover:bg-gray-700/50 text-gray-400 hover:text-gray-300 transition-colors\"\n                title=\"清除联动\"\n              >\n                <ArrowPathIcon className=\"w-4 h-4\" />\n              </button>\n            </div>\n            \n            {/* 活动筛选器 */}\n            {Object.keys(activeFilters).length > 0 && (\n              <div className=\"mb-2\">\n                <div className=\"text-xs text-gray-400 mb-1\">活动筛选器:</div>\n                <div className=\"flex flex-wrap gap-1\">\n                  {Object.entries(activeFilters).map(([key, value]) => (\n                    <span\n                      key={key}\n                      className=\"px-2 py-1 text-xs rounded-md bg-gray-700/50 text-gray-300\"\n                    >\n                      {key}: {String(value)}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {/* 高亮数据 */}\n            {highlightedData.length > 0 && (\n              <div className=\"mb-2\">\n                <div className=\"text-xs text-gray-400 mb-1\">高亮数据: {highlightedData.length} 项</div>\n              </div>\n            )}\n            \n            {/* 选中数据 */}\n            {selectedData.length > 0 && (\n              <div className=\"mb-2\">\n                <div className=\"text-xs text-gray-400 mb-1\">选中数据: {selectedData.length} 项</div>\n                <div className=\"max-h-20 overflow-y-auto space-y-1\">\n                  {selectedData.slice(0, 3).map((item, index) => (\n                    <div key={item.id} className=\"text-xs text-gray-300\">\n                      {item.category}: {item.value}\n                    </div>\n                  ))}\n                  {selectedData.length > 3 && (\n                    <div className=\"text-xs text-gray-400\">... 还有 {selectedData.length - 3} 项</div>\n                  )}\n                </div>\n              </div>\n            )}\n            \n            {/* 联动历史 */}\n            {linkageHistory.length > 0 && (\n              <div>\n                <div className=\"text-xs text-gray-400 mb-1\">最近操作:</div>\n                <div className=\"space-y-1 max-h-16 overflow-y-auto\">\n                  {linkageHistory.slice(-3).map((event, index) => (\n                    <div key={index} className=\"text-xs text-gray-300 flex items-center gap-2\">\n                      <div \n                        className=\"w-2 h-2 rounded-full\"\n                        style={{ backgroundColor: colors[index % colors.length] }}\n                      />\n                      <span>{event.type} from {event.source}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </motion.div>\n        )}\n      </div>\n    </LinkageContext.Provider>\n  );\n};\n\n// 使用联动的Hook\nexport const useLinkage = () => {\n  const context = useContext(LinkageContext);\n  if (!context) {\n    throw new Error('useLinkage must be used within a ChartLinkageProvider');\n  }\n  return context;\n};\n\n// 联动图表包装器\ninterface LinkageChartWrapperProps {\n  chartId: string;\n  children: React.ReactNode;\n  data: LinkageData[];\n  onDataFilter?: (filteredData: LinkageData[]) => void;\n  onDataHighlight?: (highlightedData: LinkageData[]) => void;\n  onDataSelect?: (selectedData: LinkageData[]) => void;\n  colorScheme?: 'modern' | 'business' | 'tech' | 'warm' | 'cool';\n}\n\nexport const LinkageChartWrapper: React.FC<LinkageChartWrapperProps> = ({\n  chartId,\n  children,\n  data,\n  onDataFilter,\n  onDataHighlight,\n  onDataSelect,\n  colorScheme = 'modern'\n}) => {\n  const linkage = useLinkage();\n  const [isLinked, setIsLinked] = useState(false);\n  const colors = getChartColors(colorScheme, 3);\n\n  useEffect(() => {\n    // 处理联动事件\n    const handleLinkageEvent = (event: LinkageEvent) => {\n      setIsLinked(true);\n      \n      switch (event.type) {\n        case 'filter':\n          if (onDataFilter) {\n            const filteredData = data.filter(item => {\n              return Object.entries(event.filters || {}).every(([key, value]) => {\n                if (!value) return true;\n                return item.metadata?.[key] === value || item.category === value;\n              });\n            });\n            onDataFilter(filteredData);\n          }\n          break;\n          \n        case 'highlight':\n          if (onDataHighlight) {\n            const highlightIds = event.data.map(d => d.id);\n            const highlightedData = data.filter(item => highlightIds.includes(item.id));\n            onDataHighlight(highlightedData);\n          }\n          break;\n          \n        case 'select':\n          if (onDataSelect) {\n            const selectIds = event.data.map(d => d.id);\n            const selectedData = data.filter(item => selectIds.includes(item.id));\n            onDataSelect(selectedData);\n          }\n          break;\n      }\n      \n      // 一段时间后重置联动状态\n      setTimeout(() => setIsLinked(false), 1000);\n    };\n\n    // 注册图表\n    linkage.registerChart(chartId, handleLinkageEvent);\n\n    // 清理\n    return () => {\n      linkage.unregisterChart(chartId);\n    };\n  }, [chartId, data, linkage, onDataFilter, onDataHighlight, onDataSelect]);\n\n  // 触发联动的辅助函数\n  const triggerFilter = (filters: Record<string, any>) => {\n    linkage.triggerLinkage({\n      type: 'filter',\n      source: chartId,\n      data: [],\n      filters\n    });\n  };\n\n  const triggerHighlight = (highlightedData: LinkageData[]) => {\n    linkage.triggerLinkage({\n      type: 'highlight',\n      source: chartId,\n      data: highlightedData\n    });\n  };\n\n  const triggerSelect = (selectedData: LinkageData[]) => {\n    linkage.triggerLinkage({\n      type: 'select',\n      source: chartId,\n      data: selectedData\n    });\n  };\n\n  return (\n    <motion.div\n      className=\"relative\"\n      animate={{\n        boxShadow: isLinked \n          ? `0 0 20px ${colors[0]}40, 0 0 40px ${colors[1]}20`\n          : `0 0 0px ${colors[0]}00`\n      }}\n      transition={{ duration: 0.3 }}\n    >\n      {/* 联动状态指示器 */}\n      {isLinked && (\n        <motion.div\n          className=\"absolute -top-2 -right-2 w-4 h-4 rounded-full border-2 border-white z-10\"\n          style={{ backgroundColor: colors[0] }}\n          initial={{ scale: 0 }}\n          animate={{ scale: 1 }}\n          exit={{ scale: 0 }}\n        >\n          <motion.div\n            className=\"absolute inset-0 rounded-full\"\n            style={{ backgroundColor: colors[0] }}\n            animate={{ scale: [1, 1.5, 1] }}\n            transition={{ duration: 1, repeat: Infinity }}\n          />\n        </motion.div>\n      )}\n      \n      {/* 包装子组件并传递联动函数 */}\n      {React.cloneElement(children as React.ReactElement, {\n        onTriggerFilter: triggerFilter,\n        onTriggerHighlight: triggerHighlight,\n        onTriggerSelect: triggerSelect,\n        isLinked\n      })}\n    </motion.div>\n  );\n};\n\n// 联动控制面板\ninterface LinkageControlPanelProps {\n  colorScheme?: 'modern' | 'business' | 'tech' | 'warm' | 'cool';\n}\n\nexport const LinkageControlPanel: React.FC<LinkageControlPanelProps> = ({ \n  colorScheme = 'modern' \n}) => {\n  const linkage = useLinkage();\n  const colors = getChartColors(colorScheme, 3);\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const hasActiveState = Object.keys(linkage.activeFilters).length > 0 || \n                        linkage.highlightedData.length > 0 || \n                        linkage.selectedData.length > 0;\n\n  if (!hasActiveState) return null;\n\n  return (\n    <motion.div\n      className=\"fixed bottom-4 right-4 z-50\"\n      initial={{ opacity: 0, y: 100 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: 100 }}\n    >\n      <motion.div\n        className=\"backdrop-blur-sm border rounded-xl overflow-hidden\"\n        style={{\n          background: `linear-gradient(135deg, ${colors[0]}15, ${colors[1]}10)`,\n          borderColor: `${colors[0]}30`,\n          boxShadow: `0 8px 32px ${colors[0]}20`\n        }}\n        animate={{ height: isExpanded ? 'auto' : '60px' }}\n        transition={{ duration: 0.3 }}\n      >\n        {/* 头部 */}\n        <div \n          className=\"flex items-center justify-between p-4 cursor-pointer\"\n          onClick={() => setIsExpanded(!isExpanded)}\n        >\n          <div className=\"flex items-center gap-2\">\n            <LinkIcon className=\"w-5 h-5\" style={{ color: colors[0] }} />\n            <span className=\"text-sm font-medium text-gray-300\">联动控制</span>\n          </div>\n          <motion.div\n            animate={{ rotate: isExpanded ? 180 : 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </motion.div>\n        </div>\n        \n        {/* 展开内容 */}\n        {isExpanded && (\n          <motion.div\n            className=\"px-4 pb-4 space-y-3\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.1 }}\n          >\n            {/* 统计信息 */}\n            <div className=\"grid grid-cols-3 gap-3 text-center\">\n              <div className=\"p-2 rounded-lg bg-gray-800/30\">\n                <div className=\"text-lg font-bold\" style={{ color: colors[0] }}>\n                  {Object.keys(linkage.activeFilters).length}\n                </div>\n                <div className=\"text-xs text-gray-400\">筛选器</div>\n              </div>\n              <div className=\"p-2 rounded-lg bg-gray-800/30\">\n                <div className=\"text-lg font-bold\" style={{ color: colors[1] }}>\n                  {linkage.highlightedData.length}\n                </div>\n                <div className=\"text-xs text-gray-400\">高亮</div>\n              </div>\n              <div className=\"p-2 rounded-lg bg-gray-800/30\">\n                <div className=\"text-lg font-bold\" style={{ color: colors[2] }}>\n                  {linkage.selectedData.length}\n                </div>\n                <div className=\"text-xs text-gray-400\">选中</div>\n              </div>\n            </div>\n            \n            {/* 清除按钮 */}\n            <button\n              onClick={linkage.clearLinkage}\n              className=\"w-full py-2 px-4 rounded-lg bg-gray-700/50 hover:bg-gray-600/50 text-gray-300 hover:text-white transition-colors text-sm font-medium\"\n            >\n              清除所有联动\n            </button>\n          </motion.div>\n        )}\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default ChartLinkageProvider;","import React, { useState, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { ArrowTrendingUpIcon, ArrowTrendingDownIcon, ExclamationTriangleIcon, LightBulbIcon } from '@heroicons/react/24/outline';\nimport { getChartColors, getGradientCSS } from '../../utils/colorSchemes';\nimport { Device } from '../../types';\n\ninterface TrendPoint {\n  date: string;\n  value: number;\n  predicted?: boolean;\n  anomaly?: boolean;\n}\n\ninterface TrendAnalysisProps {\n  devices: Device[];\n  colorScheme?: 'modern' | 'tech' | 'business' | 'warm' | 'cool';\n}\n\ninterface Insight {\n  type: 'trend' | 'anomaly' | 'prediction' | 'recommendation';\n  title: string;\n  description: string;\n  severity: 'low' | 'medium' | 'high';\n  icon: React.ReactNode;\n}\n\nconst TrendAnalysis: React.FC<TrendAnalysisProps> = ({ \n  devices, \n  colorScheme = 'modern' \n}) => {\n  const [selectedMetric, setSelectedMetric] = useState<'devices' | 'components' | 'power'>('devices');\n  const [timeRange, setTimeRange] = useState<'7d' | '30d' | '90d' | '1y'>('30d');\n  const [showPrediction, setShowPrediction] = useState(true);\n  const [showAnomalies, setShowAnomalies] = useState(true);\n\n  const colors = getChartColors(colorScheme);\n\n  // 生成趋势数据\n  const trendData = useMemo(() => {\n    const generateTrendData = (metric: string, days: number): TrendPoint[] => {\n      const data: TrendPoint[] = [];\n      const now = new Date();\n      \n      // 生成历史数据\n      for (let i = days; i >= 0; i--) {\n        const date = new Date(now);\n        date.setDate(date.getDate() - i);\n        \n        let baseValue = 0;\n        switch (metric) {\n          case 'devices':\n            baseValue = devices.length;\n            break;\n          case 'components':\n            baseValue = devices.reduce((sum, device) => sum + device.零部件列表.length, 0);\n            break;\n          case 'power':\n            baseValue = devices.reduce((sum, device) => {\n              return sum + device.零部件列表.reduce((componentSum, component) => {\n                const power = parseFloat(component.电机功率.replace(/[^\\d.]/g, '')) || 0;\n                return componentSum + power;\n              }, 0);\n            }, 0);\n            break;\n        }\n        \n        // 添加随机波动\n        const variation = (Math.random() - 0.5) * 0.2;\n        const seasonality = Math.sin((i / days) * Math.PI * 2) * 0.1;\n        const trend = i < days * 0.7 ? 0.05 : -0.02; // 前70%时间增长，后30%下降\n        \n        const value = baseValue * (1 + variation + seasonality + trend * (days - i) / days);\n        \n        // 检测异常值\n        const isAnomaly = Math.random() < 0.05 && Math.abs(variation) > 0.15;\n        \n        data.push({\n          date: date.toISOString().split('T')[0],\n          value: Math.max(0, value),\n          anomaly: isAnomaly\n        });\n      }\n      \n      // 生成预测数据\n      if (showPrediction) {\n        const lastValue = data[data.length - 1].value;\n        const predictDays = Math.min(days * 0.3, 30); // 预测未来30%的时间，最多30天\n        \n        for (let i = 1; i <= predictDays; i++) {\n          const date = new Date(now);\n          date.setDate(date.getDate() + i);\n          \n          // 简单的线性预测加上一些随机性\n          const trendSlope = (data[data.length - 1].value - data[data.length - 7].value) / 7;\n          const prediction = lastValue + trendSlope * i + (Math.random() - 0.5) * lastValue * 0.05;\n          \n          data.push({\n            date: date.toISOString().split('T')[0],\n            value: Math.max(0, prediction),\n            predicted: true\n          });\n        }\n      }\n      \n      return data;\n    };\n\n    const days = {\n      '7d': 7,\n      '30d': 30,\n      '90d': 90,\n      '1y': 365\n    }[timeRange];\n\n    return generateTrendData(selectedMetric, days);\n  }, [devices, selectedMetric, timeRange, showPrediction]);\n\n  // 生成数据洞察\n  const insights = useMemo((): Insight[] => {\n    const historicalData = trendData.filter(point => !point.predicted);\n    const predictedData = trendData.filter(point => point.predicted);\n    const anomalies = historicalData.filter(point => point.anomaly);\n    \n    const insights: Insight[] = [];\n    \n    // 趋势分析\n    if (historicalData.length >= 7) {\n      const recent = historicalData.slice(-7);\n      const earlier = historicalData.slice(-14, -7);\n      const recentAvg = recent.reduce((sum, p) => sum + p.value, 0) / recent.length;\n      const earlierAvg = earlier.reduce((sum, p) => sum + p.value, 0) / earlier.length;\n      const change = ((recentAvg - earlierAvg) / earlierAvg) * 100;\n      \n      if (Math.abs(change) > 5) {\n        insights.push({\n          type: 'trend',\n          title: change > 0 ? '上升趋势' : '下降趋势',\n          description: `过去7天${selectedMetric === 'devices' ? '设备数量' : selectedMetric === 'components' ? '零部件数量' : '电机功率'}${change > 0 ? '增长' : '下降'}了${Math.abs(change).toFixed(1)}%`,\n          severity: Math.abs(change) > 15 ? 'high' : Math.abs(change) > 10 ? 'medium' : 'low',\n          icon: change > 0 ? <ArrowTrendingUpIcon className=\"h-5 w-5\" /> : <ArrowTrendingDownIcon className=\"h-5 w-5\" />\n        });\n      }\n    }\n    \n    // 异常检测\n    if (anomalies.length > 0) {\n      insights.push({\n        type: 'anomaly',\n        title: '异常数据检测',\n        description: `检测到${anomalies.length}个异常数据点，建议进一步调查`,\n        severity: anomalies.length > 3 ? 'high' : anomalies.length > 1 ? 'medium' : 'low',\n        icon: <ExclamationTriangleIcon className=\"h-5 w-5\" />\n      });\n    }\n    \n    // 预测洞察\n    if (predictedData.length > 0) {\n      const lastHistorical = historicalData[historicalData.length - 1]?.value || 0;\n      const lastPredicted = predictedData[predictedData.length - 1]?.value || 0;\n      const predictedChange = ((lastPredicted - lastHistorical) / lastHistorical) * 100;\n      \n      insights.push({\n        type: 'prediction',\n        title: '未来趋势预测',\n        description: `预计未来${predictedData.length}天内数值将${predictedChange > 0 ? '增长' : '下降'}${Math.abs(predictedChange).toFixed(1)}%`,\n        severity: Math.abs(predictedChange) > 20 ? 'high' : Math.abs(predictedChange) > 10 ? 'medium' : 'low',\n        icon: <LightBulbIcon className=\"h-5 w-5\" />\n      });\n    }\n    \n    // 建议\n    if (selectedMetric === 'power') {\n      const avgPower = historicalData.reduce((sum, p) => sum + p.value, 0) / historicalData.length;\n      if (avgPower > 1000) {\n        insights.push({\n          type: 'recommendation',\n          title: '能耗优化建议',\n          description: '当前电机功率较高，建议考虑节能改造或优化运行策略',\n          severity: 'medium',\n          icon: <LightBulbIcon className=\"h-5 w-5\" />\n        });\n      }\n    }\n    \n    return insights;\n  }, [trendData, selectedMetric]);\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'high': return 'text-red-400 bg-red-500/20 border-red-500/30';\n      case 'medium': return 'text-yellow-400 bg-yellow-500/20 border-yellow-500/30';\n      case 'low': return 'text-green-400 bg-green-500/20 border-green-500/30';\n      default: return 'text-gray-400 bg-gray-500/20 border-gray-500/30';\n    }\n  };\n\n  const maxValue = Math.max(...trendData.map(d => d.value));\n  const minValue = Math.min(...trendData.map(d => d.value));\n  const range = maxValue - minValue;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 控制面板 */}\n      <motion.div \n        className=\"bg-white rounded-xl p-6 border border-gray-200 shadow-lg\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"flex flex-wrap gap-4 items-center justify-between\">\n          <div className=\"flex flex-wrap gap-4\">\n            {/* 指标选择 */}\n            <div className=\"flex space-x-2\">\n              {[\n                { key: 'devices', label: '设备数量' },\n                { key: 'components', label: '零部件数量' },\n                { key: 'power', label: '电机功率' }\n              ].map((metric) => (\n                <motion.button\n                  key={metric.key}\n                  onClick={() => setSelectedMetric(metric.key as any)}\n                  className={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${\n                    selectedMetric === metric.key\n                      ? 'bg-gradient-to-r from-purple-600 to-blue-600 text-white shadow-lg'\n                      : 'bg-gray-100 text-black hover:bg-gray-200'\n                  }`}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  {metric.label}\n                </motion.button>\n              ))}\n            </div>\n            \n            {/* 时间范围选择 */}\n            <div className=\"flex space-x-2\">\n              {[\n                { key: '7d', label: '7天' },\n                { key: '30d', label: '30天' },\n                { key: '90d', label: '90天' },\n                { key: '1y', label: '1年' }\n              ].map((range) => (\n                <motion.button\n                  key={range.key}\n                  onClick={() => setTimeRange(range.key as any)}\n                  className={`px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${\n                    timeRange === range.key\n                      ? 'bg-gradient-to-r from-purple-600 to-blue-600 text-white shadow-lg'\n                      : 'bg-gray-100 text-black hover:bg-gray-200'\n                  }`}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  {range.label}\n                </motion.button>\n              ))}\n            </div>\n          </div>\n          \n          {/* 显示选项 */}\n          <div className=\"flex space-x-4\">\n            <label className=\"flex items-center space-x-2 text-sm text-black\">\n              <input\n                type=\"checkbox\"\n                checked={showPrediction}\n                onChange={(e) => setShowPrediction(e.target.checked)}\n                className=\"rounded border-gray-300 bg-white text-purple-600 focus:ring-purple-500\"\n              />\n              <span>显示预测</span>\n            </label>\n            <label className=\"flex items-center space-x-2 text-sm text-black\">\n              <input\n                type=\"checkbox\"\n                checked={showAnomalies}\n                onChange={(e) => setShowAnomalies(e.target.checked)}\n                className=\"rounded border-gray-300 bg-white text-purple-600 focus:ring-purple-500\"\n              />\n              <span>显示异常</span>\n            </label>\n          </div>\n        </div>\n      </motion.div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* 趋势图表 */}\n        <motion.div \n          className=\"lg:col-span-2 bg-white rounded-xl p-6 border border-gray-200 shadow-lg\"\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.5, delay: 0.1 }}\n        >\n          <h3 className=\"text-lg font-semibold text-black mb-4\">\n            {selectedMetric === 'devices' ? '设备数量' : selectedMetric === 'components' ? '零部件数量' : '电机功率'}趋势分析\n          </h3>\n          \n          <div className=\"h-80 relative\">\n            <svg width=\"100%\" height=\"100%\" className=\"overflow-visible\">\n              <defs>\n                <linearGradient id={`trendGradient-${colorScheme}`} x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                  <stop offset=\"0%\" stopColor={colors[0]} stopOpacity={0.3} />\n                  <stop offset=\"100%\" stopColor={colors[0]} stopOpacity={0.05} />\n                </linearGradient>\n                <filter id={`glow-${colorScheme}`}>\n                  <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n                  <feMerge>\n                    <feMergeNode in=\"coloredBlur\"/>\n                    <feMergeNode in=\"SourceGraphic\"/>\n                  </feMerge>\n                </filter>\n              </defs>\n              \n              {/* 网格线 */}\n              {[0, 0.25, 0.5, 0.75, 1].map((ratio, index) => (\n                <g key={index}>\n                  <line\n                    x1=\"60\"\n                    y1={60 + (260 * ratio)}\n                    x2=\"100%\"\n                    y2={60 + (260 * ratio)}\n                    stroke=\"#374151\"\n                    strokeWidth=\"1\"\n                    strokeDasharray=\"2,2\"\n                  />\n                  <text\n                    x=\"50\"\n                    y={65 + (260 * ratio)}\n                    fill=\"#9CA3AF\"\n                    fontSize=\"12\"\n                    textAnchor=\"end\"\n                  >\n                    {(maxValue - (maxValue - minValue) * ratio).toFixed(0)}\n                  </text>\n                </g>\n              ))}\n              \n              {/* 趋势线和面积 */}\n              {trendData.length > 1 && (\n                <g>\n                  {/* 面积填充 */}\n                  <path\n                    d={`M 60 320 ${trendData.map((point, index) => {\n                      const x = 60 + (index / (trendData.length - 1)) * (window.innerWidth * 0.6 - 120);\n                      const y = 320 - ((point.value - minValue) / range) * 260;\n                      return `L ${x} ${y}`;\n                    }).join(' ')} L ${60 + (window.innerWidth * 0.6 - 120)} 320 Z`}\n                    fill={`url(#trendGradient-${colorScheme})`}\n                  />\n                  \n                  {/* 历史数据线 */}\n                  <path\n                    d={trendData.filter(point => !point.predicted).map((point, index) => {\n                      const x = 60 + (index / (trendData.length - 1)) * (window.innerWidth * 0.6 - 120);\n                      const y = 320 - ((point.value - minValue) / range) * 260;\n                      return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n                    }).join(' ')}\n                    stroke={colors[0]}\n                    strokeWidth=\"3\"\n                    fill=\"none\"\n                    filter={`url(#glow-${colorScheme})`}\n                  />\n                  \n                  {/* 预测数据线 */}\n                  {showPrediction && (\n                    <path\n                      d={trendData.filter(point => point.predicted).map((point, index, arr) => {\n                        const totalIndex = trendData.findIndex(p => p === point);\n                        const x = 60 + (totalIndex / (trendData.length - 1)) * (window.innerWidth * 0.6 - 120);\n                        const y = 320 - ((point.value - minValue) / range) * 260;\n                        return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n                      }).join(' ')}\n                      stroke={colors[1]}\n                      strokeWidth=\"2\"\n                      strokeDasharray=\"5,5\"\n                      fill=\"none\"\n                      opacity={0.8}\n                    />\n                  )}\n                  \n                  {/* 数据点 */}\n                  {trendData.map((point, index) => {\n                    const x = 60 + (index / (trendData.length - 1)) * (window.innerWidth * 0.6 - 120);\n                    const y = 320 - ((point.value - minValue) / range) * 260;\n                    \n                    return (\n                      <g key={index}>\n                        {/* 异常点标记 */}\n                        {point.anomaly && showAnomalies && (\n                          <circle\n                            cx={x}\n                            cy={y}\n                            r=\"8\"\n                            fill=\"#EF4444\"\n                            stroke=\"#FEE2E2\"\n                            strokeWidth=\"2\"\n                            opacity={0.8}\n                          />\n                        )}\n                        \n                        {/* 普通数据点 */}\n                        <circle\n                          cx={x}\n                          cy={y}\n                          r={point.predicted ? \"3\" : \"4\"}\n                          fill={point.predicted ? colors[1] : colors[0]}\n                          stroke=\"white\"\n                          strokeWidth=\"2\"\n                          opacity={point.predicted ? 0.7 : 1}\n                        />\n                      </g>\n                    );\n                  })}\n                </g>\n              )}\n            </svg>\n          </div>\n        </motion.div>\n        \n        {/* 数据洞察 */}\n        <motion.div \n          className=\"space-y-4\"\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.5, delay: 0.2 }}\n        >\n          <h3 className=\"text-lg font-semibold text-black mb-4\">数据洞察</h3>\n          \n          {insights.map((insight, index) => (\n            <motion.div\n              key={index}\n              className={`p-4 rounded-lg border backdrop-blur-md ${getSeverityColor(insight.severity)}`}\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3, delay: 0.3 + index * 0.1 }}\n              whileHover={{ scale: 1.02 }}\n            >\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"flex-shrink-0 mt-1\">\n                  {insight.icon}\n                </div>\n                <div className=\"flex-1\">\n                  <h4 className=\"font-medium text-sm mb-1\">{insight.title}</h4>\n                  <p className=\"text-xs opacity-90\">{insight.description}</p>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n          \n          {insights.length === 0 && (\n            <div className=\"p-4 rounded-lg border border-gray-200 bg-gray-50 text-center\">\n              <p className=\"text-gray-600 text-sm\">暂无数据洞察</p>\n            </div>\n          )}\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default TrendAnalysis;","import React, { useState, useEffect, useMemo } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport {\n  MagnifyingGlassIcon,\n  FunnelIcon,\n  ArrowDownTrayIcon,\n  ChartBarIcon,\n  TableCellsIcon,\n  EyeIcon,\n  PresentationChartBarIcon,\n  CpuChipIcon,\n  BoltIcon,\n  Cog6ToothIcon\n} from '@heroicons/react/24/outline';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement } from 'chart.js';\nimport { Pie, Bar } from 'react-chartjs-2';\nimport { motion } from 'framer-motion';\nimport Card from '../components/Card';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport ErrorMessage from '../components/ErrorMessage';\nimport KPICard from '../components/charts/KPICard';\nimport GaugeChart from '../components/charts/GaugeChart';\nimport RadarChart from '../components/charts/RadarChart';\nimport HeatmapChart from '../components/charts/HeatmapChart';\nimport TrendChart from '../components/charts/TrendChart';\nimport DonutChart from '../components/charts/DonutChart';\nimport { Device, FilterOptions, Statistics } from '../types';\nimport { dataAnalyzer } from '../utils/dataAnalyzer';\nimport InteractiveExplorer from '../components/charts/InteractiveExplorer';\nimport { ChartLinkageProvider, LinkageControlPanel } from '../components/charts/ChartLinkage';\nimport TrendAnalysis from '../components/charts/TrendAnalysis';\n\n// 注册Chart.js组件\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement);\n\nconst Analysis: React.FC = () => {\n  const [devices, setDevices] = useState<Device[]>([]);\n  const [filteredDevices, setFilteredDevices] = useState<Device[]>([]);\n  const [statistics, setStatistics] = useState<Statistics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filters, setFilters] = useState<FilterOptions>({});\n  const [showFilters, setShowFilters] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize] = useState(10);\n  const [activeTab, setActiveTab] = useState<'table' | 'charts' | 'advanced' | 'interactive'>('table');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    applyFiltersAndSearch();\n  }, [devices, searchTerm, filters]);\n\n  const loadData = () => {\n    try {\n      const savedData = localStorage.getItem('deviceData');\n      if (!savedData) {\n        setError('未找到数据，请先上传CSV文件');\n        setLoading(false);\n        return;\n      }\n\n      const deviceData: Device[] = JSON.parse(savedData);\n      setDevices(deviceData);\n      \n      // 生成统计数据\n      const stats = dataAnalyzer.generateStatistics(deviceData);\n      setStatistics(stats);\n      \n      setLoading(false);\n    } catch (err) {\n      setError('数据加载失败');\n      setLoading(false);\n    }\n  };\n\n  const applyFiltersAndSearch = () => {\n    let result = devices;\n\n    // 应用搜索\n    if (searchTerm) {\n      result = dataAnalyzer.searchDevices(result, searchTerm);\n    }\n\n    // 应用筛选\n    result = dataAnalyzer.filterDevices(result, filters);\n\n    setFilteredDevices(result);\n    setCurrentPage(1); // 重置到第一页\n  };\n\n  const handleFilterChange = (key: keyof FilterOptions, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [key]: value || undefined\n    }));\n  };\n\n  const clearFilters = () => {\n    setFilters({});\n    setSearchTerm('');\n  };\n\n  const exportData = () => {\n    const csvData = dataAnalyzer.exportToCSV(filteredDevices);\n    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `设备清单_${new Date().toLocaleDateString()}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const exportReport = () => {\n    if (!statistics) return;\n    \n    const report = dataAnalyzer.exportStatisticsReport(statistics);\n    const blob = new Blob([report], { type: 'text/plain;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `统计报告_${new Date().toLocaleDateString()}.txt`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // 分页数据\n  const paginatedData = useMemo(() => {\n    return dataAnalyzer.paginateDevices(filteredDevices, currentPage, pageSize);\n  }, [filteredDevices, currentPage, pageSize]);\n\n  // 图表数据\n  const chartData = useMemo(() => {\n    if (!statistics) return null;\n    \n    return {\n      deviceChart: dataAnalyzer.generateDeviceChartData(statistics),\n      componentChart: dataAnalyzer.generateComponentChartData(statistics),\n      powerChart: dataAnalyzer.generatePowerChartData(devices)\n    };\n  }, [statistics, devices]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <LoadingSpinner size=\"lg\" text=\"加载数据中...\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 py-8\">\n        <div className=\"max-w-4xl mx-auto px-4\">\n          <ErrorMessage\n            title=\"数据加载失败\"\n            message={error}\n          />\n          <div className=\"mt-4 text-center\">\n            <button\n              onClick={() => navigate('/')}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700\"\n            >\n              返回首页\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-white text-gray-900 p-6\">\n      \n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n        {/* 页面标题和统计概览 */}\n        <motion.div \n          className=\"mb-8\"\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <h1 className=\"text-3xl font-bold text-black mb-2\">数据分析</h1>\n          <p className=\"text-gray-600\">深入分析设备数据，发现潜在问题和优化机会（部分数据为演示数据）</p>\n          \n          {statistics && (\n            <motion.div \n              className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5 }}\n            >\n              <KPICard\n                title=\"设备总数\"\n                value={statistics.设备总数}\n                unit=\"台\"\n                change={5.2}\n                trend=\"up\"\n                icon={<CpuChipIcon />}\n                colorScheme=\"tech\"\n                size=\"sm\"\n                target={1500}\n                description=\"系统中注册的设备数量\"\n              />\n              <KPICard\n                title=\"零部件总数\"\n                value={statistics.零部件总数}\n                unit=\"个\"\n                change={8.7}\n                trend=\"up\"\n                icon={<Cog6ToothIcon />}\n                colorScheme=\"modern\"\n                size=\"sm\"\n                sparklineData={[2800, 2950, 3100, 3200, 3350, statistics.零部件总数]}\n                showSparkline={true}\n              />\n              <KPICard\n                title=\"电机功率汇总\"\n                value={statistics.电机功率汇总.toFixed(2)}\n                unit=\"KW\"\n                change={-2.1}\n                trend=\"down\"\n                icon={<BoltIcon />}\n                colorScheme=\"warm\"\n                size=\"sm\"\n                target={10000}\n              />\n              <KPICard\n                title=\"筛选结果\"\n                value={filteredDevices.length}\n                unit=\"条\"\n                change={0}\n                trend=\"neutral\"\n                icon={<MagnifyingGlassIcon />}\n                colorScheme=\"business\"\n                size=\"sm\"\n                description=\"当前筛选条件下的结果\"\n              />\n            </motion.div>\n          )}\n        </motion.div>\n\n        {/* 搜索和筛选 */}\n        <motion.div \n          className=\"mb-6 bg-white rounded-lg shadow-lg p-6 border border-gray-200\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n          whileHover={{ scale: 1.01, y: -2 }}\n        >\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0\">\n            {/* 搜索框 */}\n            <div className=\"flex-1 max-w-md\">\n              <div className=\"relative\">\n                <MagnifyingGlassIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"搜索设备编号、零部件名称等...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10 pr-4 py-2 w-full bg-white border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-black placeholder-gray-400\"\n                />\n              </div>\n            </div>\n\n            {/* 操作按钮 */}\n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={() => setShowFilters(!showFilters)}\n                className={`inline-flex items-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium ${\n                  showFilters ? 'bg-blue-50 text-blue-700 border-blue-300' : 'bg-white text-gray-700'\n                } hover:bg-gray-50`}\n              >\n                <FunnelIcon className=\"h-4 w-4 mr-1\" />\n                筛选\n              </button>\n              \n              <button\n                onClick={exportData}\n                className=\"inline-flex items-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\n              >\n                <ArrowDownTrayIcon className=\"h-4 w-4 mr-1\" />\n                导出数据\n              </button>\n              \n              <button\n                onClick={exportReport}\n                className=\"inline-flex items-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\n              >\n                <ArrowDownTrayIcon className=\"h-4 w-4 mr-1\" />\n                导出报告\n              </button>\n            </div>\n          </div>\n\n          {/* 筛选面板 */}\n          {showFilters && (\n            <div className=\"mt-4 pt-4 border-t border-gray-200\">\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">设备编号</label>\n                  <input\n                    type=\"text\"\n                    value={filters.设备编号 || ''}\n                    onChange={(e) => handleFilterChange('设备编号', e.target.value)}\n                    className=\"w-full px-3 py-2 bg-white border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-black placeholder-gray-400\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">工作部位</label>\n                  <input\n                    type=\"text\"\n                    value={filters.工作部位 || ''}\n                    onChange={(e) => handleFilterChange('工作部位', e.target.value)}\n                    className=\"w-full px-3 py-2 bg-white border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-black placeholder-gray-400\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">零部件名称</label>\n                  <input\n                    type=\"text\"\n                    value={filters.零部件名称 || ''}\n                    onChange={(e) => handleFilterChange('零部件名称', e.target.value)}\n                    className=\"w-full px-3 py-2 bg-white border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-black placeholder-gray-400\"\n                  />\n                </div>\n                <div className=\"flex items-end\">\n                  <button\n                    onClick={clearFilters}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\n                  >\n                    清除筛选\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </motion.div>\n\n        {/* 标签页切换 */}\n        <motion.div \n          className=\"mb-6\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.4 }}\n        >\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8\">\n              <motion.button\n                onClick={() => setActiveTab('table')}\n                className={`py-2 px-1 border-b-2 font-medium text-sm transition-all duration-300 ${\n                  activeTab === 'table'\n                    ? 'border-blue-500 text-blue-600 bg-blue-50'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <TableCellsIcon className=\"h-5 w-5 inline mr-2\" />\n                数据表格\n              </motion.button>\n              <motion.button\n                onClick={() => setActiveTab('charts')}\n                className={`py-2 px-1 border-b-2 font-medium text-sm transition-all duration-300 ${\n                  activeTab === 'charts'\n                    ? 'border-blue-500 text-blue-600 bg-blue-50'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <ChartBarIcon className=\"h-5 w-5 inline mr-2\" />\n                统计图表\n              </motion.button>\n              <motion.button\n                onClick={() => setActiveTab('advanced')}\n                className={`py-2 px-1 border-b-2 font-medium text-sm transition-all duration-300 ${\n                  activeTab === 'advanced'\n                    ? 'border-blue-500 text-blue-600 bg-blue-50'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <PresentationChartBarIcon className=\"h-5 w-5 inline mr-2\" />\n                高级分析（演示）\n              </motion.button>\n              <motion.button\n                onClick={() => setActiveTab('interactive')}\n                className={`py-2 px-1 border-b-2 font-medium text-sm transition-all duration-300 ${\n                  activeTab === 'interactive'\n                    ? 'border-blue-500 text-blue-600 bg-blue-50'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <CpuChipIcon className=\"h-5 w-5 inline mr-2\" />\n                交互探索（演示）\n              </motion.button>\n            </nav>\n          </div>\n        </motion.div>\n\n        {/* 内容区域 */}\n        {activeTab === 'table' ? (\n          /* 数据表格 */\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.6 }}\n          >\n            <div className=\"bg-white shadow-lg overflow-hidden sm:rounded-lg border border-gray-200\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">设备编号</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">工作部位</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">零部件数量</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">电机功率</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">操作</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {paginatedData.data.map((device, index) => {\n                        const totalPower = device.零部件列表.reduce((sum, component) => {\n                          const power = parseFloat(component.电机功率.replace(/[^\\d.]/g, '')) || 0;\n                          return sum + power;\n                        }, 0);\n                        \n                        return (\n                          <motion.tr \n                            key={device.id} \n                            className=\"hover:bg-gray-50 transition-all duration-300\"\n                            initial={{ opacity: 0, x: -20 }}\n                            animate={{ opacity: 1, x: 0 }}\n                            transition={{ duration: 0.3, delay: index * 0.05 }}\n                            whileHover={{ scale: 1.01, x: 5 }}\n                          >\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black\">\n                              {device.设备编号}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\n                              {device.工作部位}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\n                              {device.零部件列表.length}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\n                              {totalPower > 0 ? `${totalPower.toFixed(2)}KW` : '-'}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                              <Link\n                                to={`/device/${device.id}`}\n                                className=\"inline-flex items-center text-blue-600 hover:text-blue-500 transition-colors duration-200\"\n                              >\n                                <EyeIcon className=\"h-4 w-4 mr-1\" />\n                                查看详情\n                              </Link>\n                            </td>\n                          </motion.tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n\n                {/* 分页 */}\n                {paginatedData.totalPages > 1 && (\n                  <div className=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\n                    <div className=\"flex-1 flex justify-between sm:hidden\">\n                      <button\n                        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                        disabled={currentPage === 1}\n                        className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                      >\n                        上一页\n                      </button>\n                      <button\n                        onClick={() => setCurrentPage(Math.min(paginatedData.totalPages, currentPage + 1))}\n                        disabled={currentPage === paginatedData.totalPages}\n                        className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                      >\n                        下一页\n                      </button>\n                    </div>\n                    <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n                      <div className=\"text-sm text-gray-700\">\n                        显示 {(currentPage - 1) * pageSize + 1} 到 {Math.min(currentPage * pageSize, paginatedData.total)} 条，\n                        共 {paginatedData.total} 条记录\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <motion.button\n                          onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                          disabled={currentPage === 1}\n                          className=\"px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                          whileHover={{ scale: 1.05 }}\n                          whileTap={{ scale: 0.95 }}\n                        >\n                          上一页\n                        </motion.button>\n                        <span className=\"px-3 py-2 text-sm text-gray-700\">\n                          第 {currentPage} 页，共 {paginatedData.totalPages} 页\n                        </span>\n                        <motion.button\n                          onClick={() => setCurrentPage(Math.min(paginatedData.totalPages, currentPage + 1))}\n                          disabled={currentPage === paginatedData.totalPages}\n                          className=\"px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                          whileHover={{ scale: 1.05 }}\n                          whileTap={{ scale: 0.95 }}\n                        >\n                          下一页\n                        </motion.button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </motion.div>\n) : activeTab === 'charts' ? (\n          /* 统计图表 */\n          chartData && (\n            <motion.div \n              className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: 0.1 }}\n            >\n              <Card className=\"h-96\">\n                <h3 className=\"text-lg font-semibold mb-4 text-gray-900\">设备分类分布</h3>\n                <div className=\"h-64\">\n                  <Pie \n                    data={chartData.deviceChart} \n                    options={{\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      plugins: {\n                        legend: {\n                          position: 'bottom'\n                        }\n                      }\n                    }} \n                  />\n                </div>\n              </Card>\n              \n              <Card className=\"h-96\">\n                <h3 className=\"text-lg font-semibold mb-4 text-gray-900\">零部件分类统计</h3>\n                <div className=\"h-64\">\n                  <Bar \n                    data={chartData.componentChart} \n                    options={{\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      plugins: {\n                        legend: {\n                          display: false\n                        }\n                      },\n                      scales: {\n                        y: {\n                          beginAtZero: true\n                        }\n                      }\n                    }} \n                  />\n                </div>\n              </Card>\n              \n              <Card className=\"h-96 lg:col-span-2\">\n                <h3 className=\"text-lg font-semibold mb-4 text-gray-900\">电机功率分布</h3>\n                <div className=\"h-64\">\n                  <Pie \n                    data={chartData.powerChart} \n                    options={{\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      plugins: {\n                        legend: {\n                          position: 'bottom'\n                        }\n                      }\n                    }} \n                  />\n                </div>\n              </Card>\n            </motion.div>\n          )\n        ) : activeTab === 'advanced' ? (\n          /* 高级分析 */\n          <motion.div \n            className=\"space-y-6\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 0.1 }}\n          >\n            {/* 第一行：仪表盘和雷达图 */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <h3 className=\"text-lg font-semibold mb-4 text-black\">设备运行效率</h3>\n                <div className=\"h-64 flex items-center justify-center\">\n                  <GaugeChart\n                    value={85}\n                    min={0}\n                    max={100}\n                    unit=\"%\"\n                    size={200}\n                    colorScheme=\"tech\"\n                  />\n                </div>\n              </Card>\n              <Card>\n                <h3 className=\"text-lg font-semibold mb-4 text-black\">设备性能雷达图</h3>\n                <div className=\"h-64\">\n                  <RadarChart\n                    title=\"设备性能雷达图\"\n                    data={[\n                      { label: '效率', value: 85, maxValue: 100 },\n                      { label: '稳定性', value: 92, maxValue: 100 },\n                      { label: '能耗', value: 78, maxValue: 100 },\n                      { label: '维护性', value: 88, maxValue: 100 },\n                      { label: '安全性', value: 95, maxValue: 100 },\n                      { label: '可靠性', value: 90, maxValue: 100 }\n                    ]}\n                    size={240}\n                    colorScheme=\"modern\"\n                    fillOpacity={0.3}\n                  />\n                </div>\n              </Card>\n            </div>\n\n            {/* 第二行：热力图和趋势图 */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <h3 className=\"text-lg font-semibold mb-4 text-black\">设备运行时间热力图</h3>\n                <div className=\"h-64\">\n                  <HeatmapChart\n                    title=\"设备运行时间热力图\"\n                    data={[\n                      { x: '0', y: '0', value: 8, label: '周一 00-04' },\n                      { x: '1', y: '0', value: 12, label: '周二 00-04' },\n                      { x: '2', y: '0', value: 15, label: '周三 00-04' },\n                      { x: '3', y: '0', value: 18, label: '周四 00-04' },\n                      { x: '4', y: '0', value: 22, label: '周五 00-04' },\n                      { x: '5', y: '0', value: 25, label: '周六 00-04' },\n                      { x: '6', y: '0', value: 28, label: '周日 00-04' },\n                      { x: '0', y: '1', value: 10, label: '周一 04-08' },\n                      { x: '1', y: '1', value: 14, label: '周二 04-08' },\n                      { x: '2', y: '1', value: 17, label: '周三 04-08' },\n                      { x: '3', y: '1', value: 20, label: '周四 04-08' },\n                      { x: '4', y: '1', value: 24, label: '周五 04-08' },\n                      { x: '5', y: '1', value: 27, label: '周六 04-08' },\n                      { x: '6', y: '1', value: 30, label: '周日 04-08' },\n                      { x: '0', y: '2', value: 12, label: '周一 08-12' },\n                      { x: '1', y: '2', value: 16, label: '周二 08-12' },\n                      { x: '2', y: '2', value: 17, label: '周三 08-12' },\n                      { x: '3', y: '2', value: 22, label: '周四 08-12' },\n                      { x: '4', y: '2', value: 26, label: '周五 08-12' },\n                      { x: '5', y: '2', value: 29, label: '周六 08-12' },\n                      { x: '6', y: '2', value: 32, label: '周日 08-12' }\n                    ]}\n                    xLabels={['周一', '周二', '周三', '周四', '周五', '周六', '周日']}\n                    yLabels={['00-04', '04-08', '08-12', '12-16', '16-20', '20-24']}\n                    colorScheme=\"warm\"\n                    cellSize={30}\n                  />\n                </div>\n              </Card>\n              <Card>\n                <h3 className=\"text-lg font-semibold mb-4 text-black\">设备数量趋势</h3>\n                <div className=\"h-64\">\n                  <TrendChart\n                    title=\"设备数量趋势\"\n                    data={[\n                      { x: '1月', y: 120, label: '1月设备数量' },\n                      { x: '2月', y: 135, label: '2月设备数量' },\n                      { x: '3月', y: 148, label: '3月设备数量' },\n                      { x: '4月', y: 142, label: '4月设备数量' },\n                      { x: '5月', y: 156, label: '5月设备数量' },\n                      { x: '6月', y: 168, label: '6月设备数量' },\n                      { x: '7月', y: 175, label: '7月设备数量' },\n                      { x: '8月', y: 182, label: '8月设备数量' },\n                      { x: '9月', y: 178, label: '9月设备数量' },\n                      { x: '10月', y: 190, label: '10月设备数量' },\n                      { x: '11月', y: 195, label: '11月设备数量' },\n                      { x: '12月', y: 203, label: '12月设备数量' }\n                    ]}\n                    colorScheme=\"cool\"\n                    showArea={true}\n                    showPoints={true}\n                  />\n                </div>\n              </Card>\n            </div>\n\n            {/* 第三行：环形图和更多KPI */}\n            <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-6\">\n              <Card className=\"xl:col-span-1\">\n                <h3 className=\"text-lg font-semibold mb-4 text-black\">设备状态分布</h3>\n                <div className=\"h-64 flex items-center justify-center\">\n                  <DonutChart\n                    title=\"设备状态分布\"\n                    data={[\n                      { label: '正常运行', value: 156, color: '#10B981' },\n                      { label: '维护中', value: 23, color: '#F59E0B' },\n                      { label: '故障', value: 8, color: '#EF4444' },\n                      { label: '停机', value: 15, color: '#6B7280' }\n                    ]}\n                    size={200}\n                    innerRadius={60}\n                    outerRadius={90}\n                    showLabels={true}\n                    showPercentages={true}\n                    colorScheme=\"business\"\n                  />\n                </div>\n              </Card>\n              <div className=\"xl:col-span-2 grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                <KPICard\n                  title=\"平均运行时间\"\n                  value={18.5}\n                  unit=\"小时/天\"\n                  change={2.3}\n                  trend=\"up\"\n                  icon={<BoltIcon />}\n                  colorScheme=\"modern\"\n                  size=\"md\"\n                  target={20}\n                />\n                <KPICard\n                  title=\"故障率\"\n                  value={3.2}\n                  unit=\"%\"\n                  change={-0.8}\n                  trend=\"down\"\n                  icon={<CpuChipIcon />}\n                  colorScheme=\"warm\"\n                  size=\"md\"\n                  target={2}\n                />\n                <KPICard\n                  title=\"维护成本\"\n                  value={45.8}\n                  unit=\"万元\"\n                  change={-5.2}\n                  trend=\"down\"\n                  icon={<Cog6ToothIcon />}\n                  colorScheme=\"tech\"\n                  size=\"md\"\n                  sparklineData={[52, 48, 51, 47, 49, 45.8]}\n                  showSparkline={true}\n                />\n                <KPICard\n                  title=\"能耗效率\"\n                  value={92.3}\n                  unit=\"%\"\n                  change={1.5}\n                  trend=\"up\"\n                  icon={<BoltIcon />}\n                  colorScheme=\"business\"\n                  size=\"md\"\n                  target={95}\n                />\n              </div>\n            </div>\n          </motion.div>\n        ) : activeTab === 'interactive' ? (\n          /* 交互探索 */\n           <ChartLinkageProvider>\n             <motion.div \n               className=\"space-y-6\"\n               initial={{ opacity: 0, y: 20 }}\n               animate={{ opacity: 1, y: 0 }}\n               transition={{ duration: 0.5, delay: 0.1 }}\n             >\n               <LinkageControlPanel />\n               <InteractiveExplorer \n                 data={filteredDevices.map(device => ({\n                   id: device.id,\n                   label: device.设备编号,\n                   value: device.零部件列表.length,\n                   category: device.工作部位,\n                   subcategory: device.零部件列表[0]?.零部件名称 || '未知',\n                   metadata: { \n                     totalPower: device.零部件列表.reduce((sum, component) => {\n                       const power = parseFloat(component.电机功率.replace(/[^\\d.]/g, '')) || 0;\n                       return sum + power;\n                     }, 0)\n                   }\n                 }))}\n                 title=\"设备交互探索\"\n                 colorScheme=\"tech\"\n               />\n               \n               {/* 趋势分析 */}\n               <motion.div\n                 initial={{ opacity: 0, y: 20 }}\n                 animate={{ opacity: 1, y: 0 }}\n                 transition={{ duration: 0.5, delay: 0.3 }}\n               >\n                 <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">趋势分析与预测</h2>\n                 <TrendAnalysis devices={filteredDevices} colorScheme=\"tech\" />\n               </motion.div>\n             </motion.div>\n           </ChartLinkageProvider>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Analysis;"],"names":["ArrowDownIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","ArrowPathIcon","ArrowTrendingDownIcon","ArrowTrendingUpIcon","ArrowUpIcon","ArrowsPointingInIcon","ArrowsPointingOutIcon","Cog6ToothIcon","CpuChipIcon","EyeIcon","FunnelIcon","LightBulbIcon","LinkIcon","MagnifyingGlassIcon","PresentationChartBarIcon","TableCellsIcon","PopChildMeasure","React.Component","prevProps","element","parent","parentWidth","isHTMLElement","size","PopChild","children","isPresent","anchorX","root","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","width","height","top","left","right","x","style","jsx","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","isReusedContext","context","useMemo","childId","isComplete","_","key","React.useEffect","PresenceContext","getChildKey","child","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","exitingChildren","nextChildren","forceRender","LayoutGroupContext","Fragment","onExit","isEveryExitComplete","isExitComplete","round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","hex","h1","b","h2","eq","isShort","hexParse","str","len","ret","alpha","a","f","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","r","g","d","max","rgb2hsl","min","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","type","obj","color","weight","c1","c2","w2","p","w1","val","noop","uid","isNullOrUndef","value","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","o","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","item","_isClickEvent","e","PI","TAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNonPrimitive","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","rtl","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","scope","Defaults","_descriptors","_appliers","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_alignPixel","chart","pixel","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","rotation","radius","rad","_isPointInArea","point","area","margin","clipArea","unclipArea","setRenderOpts","opts","decorateText","line","metrics","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","getSizeForArea","scale","chartArea","field","getDatasetArea","meta","xScale","yScale","getDatasetClipArea","clip","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","cur","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","remain","duration","loop","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","datasetIndex","otherValue","found","convertObjectDataToArray","iScale","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","parsed","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","axis","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","indexAxis","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","count","_stacked","sorted","prev","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","_parsed","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","bars","reset","horizontal","vpixels","ipixels","dataIndex","currentParsed","iScaleValue","skipNull","indexScaleId","firstScaleAxisId","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","axisCount","axisID","axisNumber","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","getter","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","pointStyle","label","legendItem","legend","PieController","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","spanGaps","lookupMethod","distanceToDefinedLo","distanceToDefinedHi","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","minSize","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","border","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","tz","gz","bz","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart$1","_a","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","Chart","clipSelf","borderWidth","borderJoinStyle","outerAngleClip","innerAngleClip","clipWidth","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawBorder","borderRadius","inner","ArcElement","chartX","chartY","rAdjust","_circumference","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","bounds","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","borderColor","outer","addRectPath","mouseX","mouseY","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","previous","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_args","ci","usePointStyle","useBorderRadius","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","pt","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","defaultDatasetIdKey","reforwardRef","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","chartRef","renderChart","destroyChart","useEffect","React","forwardRef","createTypedChart","registerables","Bar","Pie","chartColorSchemes","modern","business","tech","warm","cool","statusColors","success","bg","solid","warning","error","neutral","getChartColors","scheme","slice","getStatusColor","status","generateRandomColors","push","KPICard","changeType","trend","icon","showSparkline","sparklineData","description","colorScheme","primaryColor","secondaryColor","accentColor","trendColor","colorClasses","blue","accent","gradient","green","red","yellow","purple","indigo","sizeClasses","sm","md","lg","getTrendIcon","getChangeIcon","undefined","motion","background","boxShadow","jsxs","textShadow","toLocaleString","Math","join","pathLength","ease","toFixed","GaugeChart","showValue","percentage","strokeDashoffset","random","Array","RadarChart","fillOpacity","levels","angleStep","generateGridLines","forEach","generateDataPath","normalizedValue","maxValue","generateLabels","labelRadius","fill","generateDataPoints","HeatmapChart","xLabels","yLabels","cellSize","chartColors","minValue","colorSchemes","light","medium","dark","getColor","intensity","includes","parseInt","getOpacity","yIndex","xIndex","indexOf","TrendChart","xAxisLabel","yAxisLabel","showArea","showPoints","chartHeight","xValues","parseFloat","yValues","xMin","xMax","yMin","yMax","xRange","yRange","getX","getY","generatePath","generateAreaPath","linePath","firstX","lastX","bottomY","gridCount","reduce","DonutChart","showLabels","showPercentages","hoveredSegment","setHoveredSegment","selectedSegment","setSelectedSegment","sum","outerR","startAngleRad","endAngleRad","x4","y4","largeArcFlag","generateSegments","currentAngle","segmentAngle","isHovered","isSelected","adjustedInnerRadius","adjustedOuterRadius","path","labelAngle","labelX","labelY","segment","generateCenterInfo","selectedItem","InteractiveExplorer","onDataChange","onDrillDown","enableDrillDown","enableFiltering","enableZoom","chartType","filteredData","setFilteredData","selectedFilters","setSelectedFilters","isZoomed","setIsZoomed","selectedDataPoint","setSelectedDataPoint","viewMode","setViewMode","searchTerm","setSearchTerm","filterOptions","Set","category","subcategory","Boolean","toLowerCase","Object","fieldValue","handleFilterChange","filterKey","checked","currentValues","newValues","handleDataPointClick","dataPoint","stiffness","pathData","renderTable","ChartBarIcon","LinkageContext","ChartLinkageProvider","activeFilters","setActiveFilters","highlightedData","setHighlightedData","selectedData","setSelectedData","chartCallbacks","setChartCallbacks","Map","linkageHistory","setLinkageHistory","registerChart","chartId","onLinkageEvent","unregisterChart","newMap","delete","triggerLinkage","filters","clearLinkage","clearEvent","contextValue","String","useLinkage","Error","LinkageControlPanel","linkage","isExpanded","setIsExpanded","TrendAnalysis","devices","selectedMetric","setSelectedMetric","timeRange","setTimeRange","showPrediction","setShowPrediction","showAnomalies","setShowAnomalies","trendData","generateTrendData","metric","days","now","Date","setDate","getDate","device","零部件列表","componentSum","power","电机功率","replace","variation","seasonality","isAnomaly","abs","toISOString","split","anomaly","lastValue","predictDays","trendSlope","prediction","predicted","insights","historicalData","predictedData","anomalies","recent","earlier","recentAvg","earlierAvg","severity","ExclamationTriangleIcon","lastHistorical","predictedChange","getSeverityColor","window","innerWidth","findIndex","insight","ChartJS","register","Analysis","setDevices","filteredDevices","setFilteredDevices","statistics","setStatistics","loading","setLoading","setError","setFilters","showFilters","setShowFilters","currentPage","setCurrentPage","pageSize","activeTab","setActiveTab","navigate","useNavigate","loadData","applyFiltersAndSearch","savedData","localStorage","getItem","deviceData","JSON","stats","dataAnalyzer","generateStatistics","searchDevices","filterDevices","clearFilters","exportData","csvData","exportToCSV","blob","Blob","link","document","createElement","url","URL","createObjectURL","setAttribute","toLocaleDateString","visibility","appendChild","click","removeChild","exportReport","report","exportStatisticsReport","paginatedData","paginateDevices","chartData","deviceChart","generateDeviceChartData","componentChart","generateComponentChartData","powerChart","generatePowerChartData","LoadingSpinner","ErrorMessage","设备总数","零部件总数","电机功率汇总","BoltIcon","ArrowDownTrayIcon","设备编号","工作部位","零部件名称","totalPower","Link","totalPages","Card","responsive","metadata"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]}